

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Oct 16 17:24:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F25K42 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  007604                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _calibSwitch_address
    75  007604  05                 	db	5
    76                           
    77                           ;initializer for _firstPowerOn_address
    78  007605  04                 	db	4
    79                           
    80                           ;initializer for _firstPowerOn
    81  007606  01                 	db	1
    82                           
    83                           ;initializer for _cy_xtd_address
    84  007607  03                 	db	3
    85                           
    86                           ;initializer for _cx_xtd_address
    87  007608  02                 	db	2
    88                           
    89                           ;initializer for _cy_std_address
    90  007609  01                 	db	1
    91  0000                     _OSCTUNE	set	14814
    92  0000                     _OSCFRQ	set	14815
    93  0000                     _ADERRL	set	16098
    94  0000                     _ADERRH	set	16099
    95  0000                     _ADPREVL	set	16109
    96  0000                     _ADPREVH	set	16110
    97  0000                     _ADFLTRL	set	16102
    98  0000                     _ADFLTRH	set	16103
    99  0000                     _ADACCL	set	16104
   100  0000                     _ADACCH	set	16105
   101  0000                     _ADCNT	set	16107
   102  0000                     _ADRESL	set	16111
   103  0000                     _ADRESH	set	16112
   104  0000                     _ADCON0	set	16120
   105  0000                     _ADCON1	set	16121
   106  0000                     _ADPREH	set	16119
   107  0000                     _ADPREL	set	16118
   108  0000                     _ADCAP	set	16117
   109  0000                     _ADACQH	set	16116
   110  0000                     _ADPCH	set	16113
   111  0000                     _ADRPT	set	16108
   112  0000                     _ADACCU	set	16106
   113  0000                     _ADSTPTH	set	16101
   114  0000                     _ADSTPTL	set	16100
   115  0000                     _ADUTHH	set	16097
   116  0000                     _ADUTHL	set	16096
   117  0000                     _ADLTHH	set	16095
   118  0000                     _ADCON1bits	set	16121
   119  0000                     _ADSTATbits	set	16124
   120  0000                     _ADCON2bits	set	16122
   121  0000                     _ADCON3bits	set	16123
   122  0000                     _ADCON0bits	set	16120
   123  0000                     _LATCbits	set	16316
   124  0000                     _LATAbits	set	16314
   125  0000                     _LATBbits	set	16315
   126  0000                     _PIR0bits	set	14752
   127  0000                     _PMD0	set	14784
   128  0000                     _OSCCON1	set	14809
   129  0000                     _ANSELA	set	14912
   130  0000                     _ANSELB	set	14928
   131  0000                     _ANSELC	set	14944
   132  0000                     _ADLTHL	set	16094
   133  0000                     _ADACQL	set	16115
   134  0000                     _LATA	set	16314
   135  0000                     _ADCLK	set	16127
   136  0000                     _ADACT	set	16126
   137  0000                     _ADREF	set	16125
   138  0000                     _ADSTAT	set	16124
   139  0000                     _ADCON3	set	16123
   140  0000                     _ADCON2	set	16122
   141  0000                     _TRISA	set	16322
   142  0000                     _LATC	set	16316
   143  0000                     _LATB	set	16315
   144  0000                     _INTCON0bits	set	16338
   145  0000                     _TABLAT	set	16373
   146  0000                     _TBLPTRL	set	16374
   147  0000                     _TBLPTRH	set	16375
   148  0000                     _TBLPTRU	set	16376
   149  0000                     _TRISC	set	16324
   150  0000                     _TRISB	set	16323
   151  0000                     _INLVLC	set	14948
   152  0000                     _SLRCONC	set	14947
   153  0000                     _ODCONC	set	14946
   154  0000                     _RC3I2C	set	14954
   155  0000                     _WPUC	set	14945
   156  0000                     _WPUE	set	14977
   157  0000                     _INLVLB	set	14932
   158  0000                     _SLRCONB	set	14931
   159  0000                     _ODCONB	set	14930
   160  0000                     _RB1I2C	set	14938
   161  0000                     _WPUB	set	14929
   162  0000                     _INLVLA	set	14916
   163  0000                     _SLRCONA	set	14915
   164  0000                     _ODCONA	set	14914
   165  0000                     _WPUA	set	14913
   166  0000                     _INLVLE	set	14980
   167  0000                     _RB2I2C	set	14939
   168  0000                     _RC4I2C	set	14955
   169  0000                     _OSCCON3	set	14811
   170  0000                     _OSCEN	set	14813
   171  0000                     _NVMDAT	set	14819
   172  0000                     _NVMADRL	set	14816
   173  0000                     _NVMCON1bits	set	14821
   174  0000                     _PMD7	set	14791
   175  0000                     _PMD6	set	14790
   176  0000                     _PMD5	set	14789
   177  0000                     _PMD4	set	14788
   178  0000                     _PMD3	set	14787
   179  0000                     _PMD2	set	14786
   180  0000                     _PMD1	set	14785
   181  0000                     _NVMCON2	set	14822
   182                           
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186  00775C                     __pcinit:
   187                           	callstack 0
   188  00775C                     start_initialization:
   189                           	callstack 0
   190  00775C                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to COMRAM (6 bytes)
   194                           ; load TBLPTR registers with __pidataCOMRAM
   195  00775C  0E04               	movlw	low __pidataCOMRAM
   196  00775E  6EF6               	movwf	tblptrl,c
   197  007760  0E76               	movlw	high __pidataCOMRAM
   198  007762  6EF7               	movwf	tblptrh,c
   199  007764  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   200  007766  6EF8               	movwf	tblptru,c
   201  007768  EE00  F041         	lfsr	0,__pdataCOMRAM
   202  00776C  EE10 F006          	lfsr	1,6
   203  007770                     copy_data0:
   204  007770  0009               	tblrd		*+
   205  007772  006F FFD7 FFEE     	movff	tablat,postinc0
   206  007778  50E5               	movf	postdec1,w,c
   207  00777A  50E1               	movf	fsr1l,w,c
   208  00777C  E1F9               	bnz	copy_data0
   209                           
   210                           ; Clear objects allocated to COMRAM (6 bytes)
   211  00777E  6A40               	clrf	(__pbssCOMRAM+5)& (0+255),c
   212  007780  6A3F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   213  007782  6A3E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   214  007784  6A3D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   215  007786  6A3C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   216  007788  6A3B               	clrf	__pbssCOMRAM& (0+255),c
   217  00778A                     end_of_initialization:
   218                           	callstack 0
   219  00778A                     __end_of__initialization:
   220                           	callstack 0
   221  00778A  0100               	movlb	0
   222  00778C  EFB7  F03C         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  00003B                     __pbssCOMRAM:
   226                           	callstack 0
   227  00003B                     _calibSwitch:
   228                           	callstack 0
   229  00003B                     	ds	1
   230  00003C                     _cy_xtd:
   231                           	callstack 0
   232  00003C                     	ds	1
   233  00003D                     _cx_xtd:
   234                           	callstack 0
   235  00003D                     	ds	1
   236  00003E                     _cx_std_address:
   237                           	callstack 0
   238  00003E                     	ds	1
   239  00003F                     _cy_std:
   240                           	callstack 0
   241  00003F                     	ds	1
   242  000040                     _cx_std:
   243                           	callstack 0
   244  000040                     	ds	1
   245                           
   246                           	psect	dataCOMRAM
   247  000041                     __pdataCOMRAM:
   248                           	callstack 0
   249  000041                     _calibSwitch_address:
   250                           	callstack 0
   251  000041                     	ds	1
   252  000042                     _firstPowerOn_address:
   253                           	callstack 0
   254  000042                     	ds	1
   255  000043                     _firstPowerOn:
   256                           	callstack 0
   257  000043                     	ds	1
   258  000044                     _cy_xtd_address:
   259                           	callstack 0
   260  000044                     	ds	1
   261  000045                     _cx_xtd_address:
   262                           	callstack 0
   263  000045                     	ds	1
   264  000046                     _cy_std_address:
   265                           	callstack 0
   266  000046                     	ds	1
   267                           
   268                           	psect	cstackCOMRAM
   269  000001                     __pcstackCOMRAM:
   270                           	callstack 0
   271  000001                     ?_ADCC_GetSingleConversion:
   272                           	callstack 0
   273  000001                     ?___wmul:
   274                           	callstack 0
   275  000001                     ?___lwdiv:
   276                           	callstack 0
   277  000001                     ?___lwmod:
   278                           	callstack 0
   279  000001                     DATAEE_WriteByte@bData:
   280                           	callstack 0
   281  000001                     DATAEE_ReadByte@bAdd:
   282                           	callstack 0
   283  000001                     RotateLeft@result:
   284                           	callstack 0
   285  000001                     RotateRight@result:
   286                           	callstack 0
   287  000001                     ___wmul@multiplier:
   288                           	callstack 0
   289  000001                     ___lwdiv@dividend:
   290                           	callstack 0
   291  000001                     ___lwmod@dividend:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x0
   295  000001                     	ds	1
   296  000002                     DATAEE_WriteByte@bAdd:
   297                           	callstack 0
   298  000002                     RotateLeft@cData:
   299                           	callstack 0
   300  000002                     RotateRight@cData:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x1
   304  000002                     	ds	1
   305  000003                     ??_ADCC_GetSingleConversion:
   306  000003                     DATAEE_WriteByte@GIEBitValue:
   307                           	callstack 0
   308  000003                     ___wmul@multiplicand:
   309                           	callstack 0
   310  000003                     ___lwdiv@divisor:
   311                           	callstack 0
   312  000003                     ___lwmod@divisor:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x2
   316  000003                     	ds	2
   317  000005                     ADCC_GetSingleConversion@channel:
   318                           	callstack 0
   319  000005                     ___lwmod@counter:
   320                           	callstack 0
   321  000005                     ___wmul@product:
   322                           	callstack 0
   323  000005                     ___lwdiv@quotient:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x4
   327  000005                     	ds	1
   328  000006                     ?_GetX:
   329                           	callstack 0
   330  000006                     ?_GetY:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x5
   334  000006                     	ds	1
   335  000007                     ___lwdiv@counter:
   336                           	callstack 0
   337  000007                     ScaleDown@raw12:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x6
   341  000007                     	ds	1
   342  000008                     ??_Calibration:
   343                           
   344                           ; 1 bytes @ 0x7
   345  000008                     	ds	1
   346  000009                     ScaleDown@c:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x8
   350  000009                     	ds	1
   351  00000A                     ??_ScaleDown:
   352                           
   353                           ; 1 bytes @ 0x9
   354  00000A                     	ds	2
   355  00000C                     Calibration@counter:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xB
   359  00000C                     	ds	2
   360  00000E                     Calibration@xFactor:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xD
   364  00000E                     	ds	2
   365  000010                     Calibration@yFactor:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xF
   369  000010                     	ds	2
   370  000012                     Calibration@xMin:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x11
   374  000012                     	ds	2
   375  000014                     Calibration@xMax:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x13
   379  000014                     	ds	2
   380  000016                     Calibration@yMin:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x15
   384  000016                     	ds	2
   385  000018                     Calibration@yMax:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x17
   389  000018                     	ds	2
   390  00001A                     Calibration@xNeutral16:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x19
   394  00001A                     	ds	2
   395  00001C                     Calibration@yNeutral16:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x1B
   399  00001C                     	ds	2
   400  00001E                     Calibration@temp:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x1D
   404  00001E                     	ds	2
   405  000020                     ??_main:
   406                           
   407                           ; 1 bytes @ 0x1F
   408  000020                     	ds	4
   409  000024                     main@yNeutral16:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x23
   413  000024                     	ds	2
   414  000026                     main@xOld:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x25
   418  000026                     	ds	2
   419  000028                     main@yOld:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x27
   423  000028                     	ds	2
   424  00002A                     main@xNeutral16:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x29
   428  00002A                     	ds	2
   429  00002C                     main@xFactor:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x2B
   433  00002C                     	ds	1
   434  00002D                     main@yFactor:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x2C
   438  00002D                     	ds	1
   439  00002E                     main@xSteps:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x2D
   443  00002E                     	ds	2
   444  000030                     main@ySteps:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x2F
   448  000030                     	ds	2
   449  000032                     main@xWheel:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x31
   453  000032                     	ds	1
   454  000033                     main@yWheel:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x32
   458  000033                     	ds	1
   459  000034                     main@x:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x33
   463  000034                     	ds	2
   464  000036                     main@xNeutral8:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x35
   468  000036                     	ds	1
   469  000037                     main@yNeutral8:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x36
   473  000037                     	ds	1
   474  000038                     main@y:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x37
   478  000038                     	ds	2
   479  00003A                     main@maxRange:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x39
   483  00003A                     	ds	1
   484                           
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 107 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  y               2   55[COMRAM] unsigned short 
   495 ;;  x               2   51[COMRAM] unsigned short 
   496 ;;  ySteps          2   47[COMRAM] short 
   497 ;;  xSteps          2   45[COMRAM] short 
   498 ;;  xNeutral16      2   41[COMRAM] unsigned short 
   499 ;;  yOld            2   39[COMRAM] unsigned short 
   500 ;;  xOld            2   37[COMRAM] unsigned short 
   501 ;;  yNeutral16      2   35[COMRAM] unsigned short 
   502 ;;  maxRange        1   57[COMRAM] unsigned char 
   503 ;;  yNeutral8       1   54[COMRAM] unsigned char 
   504 ;;  xNeutral8       1   53[COMRAM] unsigned char 
   505 ;;  yWheel          1   50[COMRAM] unsigned char 
   506 ;;  xWheel          1   49[COMRAM] unsigned char 
   507 ;;  yFactor         1   44[COMRAM] unsigned char 
   508 ;;  xFactor         1   43[COMRAM] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   518 ;;      Params:         0       0       0       0       0       0       0       0       0
   519 ;;      Locals:        23       0       0       0       0       0       0       0       0
   520 ;;      Temps:          4       0       0       0       0       0       0       0       0
   521 ;;      Totals:        27       0       0       0       0       0       0       0       0
   522 ;;Total ram usage:       27 bytes
   523 ;; Hardware stack levels required when called: 3
   524 ;; This function calls:
   525 ;;		_ADCC_DisableContinuousConversion
   526 ;;		_Calibration
   527 ;;		_DATAEE_ReadByte
   528 ;;		_GetX
   529 ;;		_GetY
   530 ;;		_RotateLeft
   531 ;;		_RotateRight
   532 ;;		_SYSTEM_Initialize
   533 ;;		_ScaleDown
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540  00796E                     __ptext0:
   541                           	callstack 0
   542  00796E                     _main:
   543                           	callstack 28
   544  00796E                     
   545                           ;main.c: 110:     SYSTEM_Initialize();
   546  00796E  EC15  F03B         	call	_SYSTEM_Initialize	;wreg free
   547  007972                     
   548                           ;main.c: 112:     int16_t xSteps, ySteps;;main.c: 113:  uint16_t x, y, xOld, yOld;;main.
      +                          c: 114:  uint8_t xNeutral8, yNeutral8;;main.c: 115:  uint8_t xWheel = 0b11001100;
   549  007972  0ECC               	movlw	204
   550  007974  6E32               	movwf	main@xWheel^0,c
   551  007976                     
   552                           ;main.c: 116:  uint8_t yWheel = 0b00110011;
   553  007976  0E33               	movlw	51
   554  007978  6E33               	movwf	main@yWheel^0,c
   555  00797A  80BB               	bsf	187,0,c	;volatile
   556  00797C  82BB               	bsf	187,1,c	;volatile
   557  00797E  8EBA               	bsf	186,7,c	;volatile
   558  007980  8CBA               	bsf	186,6,c	;volatile
   559  007982  98BC               	bcf	188,4,c	;volatile
   560  007984                     
   561                           ;main.c: 126:     _delay((unsigned long)((100)*(32000000/4000.0)));
   562  007984  0E05               	movlw	5
   563  007986  6E21               	movwf	(??_main+1)^0,c
   564  007988  0E0F               	movlw	15
   565  00798A  6E20               	movwf	??_main^0,c
   566  00798C  0EF1               	movlw	241
   567  00798E                     u857:
   568  00798E  2EE8               	decfsz	wreg,f,c
   569  007990  D7FE               	bra	u857
   570  007992  2E20               	decfsz	??_main^0,f,c
   571  007994  D7FC               	bra	u857
   572  007996  2E21               	decfsz	(??_main+1)^0,f,c
   573  007998  D7FA               	bra	u857
   574  00799A  F000               	nop	
   575  00799C  88BC               	bsf	188,4,c	;volatile
   576  00799E                     
   577                           ;main.c: 130:     _delay((unsigned long)((250)*(32000000/4000.0)));
   578  00799E  0E0B               	movlw	11
   579  0079A0  6E21               	movwf	(??_main+1)^0,c
   580  0079A2  0E26               	movlw	38
   581  0079A4  6E20               	movwf	??_main^0,c
   582  0079A6  0E5E               	movlw	94
   583  0079A8                     u867:
   584  0079A8  2EE8               	decfsz	wreg,f,c
   585  0079AA  D7FE               	bra	u867
   586  0079AC  2E20               	decfsz	??_main^0,f,c
   587  0079AE  D7FC               	bra	u867
   588  0079B0  2E21               	decfsz	(??_main+1)^0,f,c
   589  0079B2  D7FA               	bra	u867
   590                           
   591                           ;main.c: 145:     xFactor = DATAEE_ReadByte(cx_xtd_address);
   592  0079B4  0E02               	movlw	2
   593  0079B6  EC2A  F03B         	call	_DATAEE_ReadByte
   594  0079BA  6E2C               	movwf	main@xFactor^0,c
   595                           
   596                           ;main.c: 146:     yFactor = DATAEE_ReadByte(cy_xtd_address);
   597  0079BC  0E03               	movlw	3
   598  0079BE  EC2A  F03B         	call	_DATAEE_ReadByte
   599  0079C2  6E2D               	movwf	main@yFactor^0,c
   600  0079C4                     
   601                           ;main.c: 147:     maxRange = 94;
   602  0079C4  0E5E               	movlw	94
   603  0079C6  6E3A               	movwf	main@maxRange^0,c
   604                           
   605                           ;main.c: 149:     ADCC_DisableContinuousConversion();
   606  0079C8  ECFF  F03A         	call	_ADCC_DisableContinuousConversion	;wreg free
   607  0079CC  EC05  F03B         	call	_GetX	;wreg free
   608  0079D0                     
   609                           ;main.c: 155:  xNeutral16 = GetX();
   610  0079D0  EC05  F03B         	call	_GetX	;wreg free
   611  0079D4  C006  F02A         	movff	?_GetX,main@xNeutral16
   612  0079D8  C007  F02B         	movff	?_GetX+1,main@xNeutral16+1
   613  0079DC                     
   614                           ;main.c: 156:  xNeutral8 = ScaleDown(xNeutral16, xFactor);
   615  0079DC  C02A  F007         	movff	main@xNeutral16,ScaleDown@raw12
   616  0079E0  C02B  F008         	movff	main@xNeutral16+1,ScaleDown@raw12+1
   617  0079E4  C02C  F009         	movff	main@xFactor,ScaleDown@c
   618  0079E8  EC6D  F03B         	call	_ScaleDown	;wreg free
   619  0079EC  6E36               	movwf	main@xNeutral8^0,c
   620  0079EE                     
   621                           ;main.c: 157:  xOld = xNeutral8;
   622  0079EE  C036  F026         	movff	main@xNeutral8,main@xOld
   623  0079F2  6A27               	clrf	(main@xOld+1)^0,c
   624  0079F4                     
   625                           ;main.c: 160:  yNeutral16 = GetY();
   626  0079F4  EC0D  F03B         	call	_GetY	;wreg free
   627  0079F8  C006  F024         	movff	?_GetY,main@yNeutral16
   628  0079FC  C007  F025         	movff	?_GetY+1,main@yNeutral16+1
   629  007A00                     
   630                           ;main.c: 161:  yNeutral8 = ScaleDown(yNeutral16, yFactor);
   631  007A00  C024  F007         	movff	main@yNeutral16,ScaleDown@raw12
   632  007A04  C025  F008         	movff	main@yNeutral16+1,ScaleDown@raw12+1
   633  007A08  C02D  F009         	movff	main@yFactor,ScaleDown@c
   634  007A0C  EC6D  F03B         	call	_ScaleDown	;wreg free
   635  007A10  6E37               	movwf	main@yNeutral8^0,c
   636  007A12                     
   637                           ;main.c: 162:  yOld = yNeutral8;
   638  007A12  C037  F028         	movff	main@yNeutral8,main@yOld
   639  007A16  6A29               	clrf	(main@yOld+1)^0,c
   640  007A18                     
   641                           ;main.c: 165:     if (DATAEE_ReadByte(firstPowerOn_address) != 1) Calibration();
   642  007A18  0E04               	movlw	4
   643  007A1A  EC2A  F03B         	call	_DATAEE_ReadByte
   644  007A1E  06E8               	decf	wreg,f,c
   645  007A20  B4D8               	btfsc	status,2,c
   646  007A22  EF15  F03D         	goto	u701
   647  007A26  EF17  F03D         	goto	u700
   648  007A2A                     u701:
   649  007A2A  EF19  F03D         	goto	l399
   650  007A2E                     u700:
   651  007A2E  EC49  F03E         	call	_Calibration	;wreg free
   652  007A32                     l399:
   653                           
   654                           ;main.c: 168:     {;main.c: 170:   x = GetX();
   655  007A32  EC05  F03B         	call	_GetX	;wreg free
   656  007A36  C006  F034         	movff	?_GetX,main@x
   657  007A3A  C007  F035         	movff	?_GetX+1,main@x+1
   658  007A3E                     
   659                           ;main.c: 172:   if ( (x>xNeutral8) && ((x-xNeutral8) > maxRange) ) x = xNeutral8 + maxRa
      +                          nge;
   660  007A3E  5036               	movf	main@xNeutral8^0,w,c
   661  007A40  6E20               	movwf	??_main^0,c
   662  007A42  6A21               	clrf	(??_main+1)^0,c
   663  007A44  5034               	movf	main@x^0,w,c
   664  007A46  5C20               	subwf	??_main^0,w,c
   665  007A48  5035               	movf	(main@x+1)^0,w,c
   666  007A4A  5821               	subwfb	(??_main+1)^0,w,c
   667  007A4C  B0D8               	btfsc	status,0,c
   668  007A4E  EF2B  F03D         	goto	u711
   669  007A52  EF2D  F03D         	goto	u710
   670  007A56                     u711:
   671  007A56  EF46  F03D         	goto	l400
   672  007A5A                     u710:
   673  007A5A  5036               	movf	main@xNeutral8^0,w,c
   674  007A5C  5C34               	subwf	main@x^0,w,c
   675  007A5E  6E20               	movwf	??_main^0,c
   676  007A60  0E00               	movlw	0
   677  007A62  5835               	subwfb	(main@x+1)^0,w,c
   678  007A64  6E21               	movwf	(??_main+1)^0,c
   679  007A66  503A               	movf	main@maxRange^0,w,c
   680  007A68  6E22               	movwf	(??_main+2)^0,c
   681  007A6A  6A23               	clrf	(??_main+3)^0,c
   682  007A6C  5020               	movf	??_main^0,w,c
   683  007A6E  5C22               	subwf	(??_main+2)^0,w,c
   684  007A70  5021               	movf	(??_main+1)^0,w,c
   685  007A72  5823               	subwfb	(??_main+3)^0,w,c
   686  007A74  B0D8               	btfsc	status,0,c
   687  007A76  EF3F  F03D         	goto	u721
   688  007A7A  EF41  F03D         	goto	u720
   689  007A7E                     u721:
   690  007A7E  EF46  F03D         	goto	l400
   691  007A82                     u720:
   692  007A82  5036               	movf	main@xNeutral8^0,w,c
   693  007A84  243A               	addwf	main@maxRange^0,w,c
   694  007A86  6E34               	movwf	main@x^0,c
   695  007A88  6A35               	clrf	(main@x+1)^0,c
   696  007A8A  3635               	rlcf	(main@x+1)^0,f,c
   697  007A8C                     l400:
   698                           
   699                           ;main.c: 173:   if ( (x<xNeutral8) && ((xNeutral8-x) > maxRange) ) x = xNeutral8 - maxRa
      +                          nge;
   700  007A8C  5036               	movf	main@xNeutral8^0,w,c
   701  007A8E  5C34               	subwf	main@x^0,w,c
   702  007A90  0E00               	movlw	0
   703  007A92  5835               	subwfb	(main@x+1)^0,w,c
   704  007A94  B0D8               	btfsc	status,0,c
   705  007A96  EF4F  F03D         	goto	u731
   706  007A9A  EF51  F03D         	goto	u730
   707  007A9E                     u731:
   708  007A9E  EF6C  F03D         	goto	l1897
   709  007AA2                     u730:
   710  007AA2  5036               	movf	main@xNeutral8^0,w,c
   711  007AA4  6E20               	movwf	??_main^0,c
   712  007AA6  6A21               	clrf	(??_main+1)^0,c
   713  007AA8  5034               	movf	main@x^0,w,c
   714  007AAA  5E20               	subwf	??_main^0,f,c
   715  007AAC  5035               	movf	(main@x+1)^0,w,c
   716  007AAE  5A21               	subwfb	(??_main+1)^0,f,c
   717  007AB0  503A               	movf	main@maxRange^0,w,c
   718  007AB2  6E22               	movwf	(??_main+2)^0,c
   719  007AB4  6A23               	clrf	(??_main+3)^0,c
   720  007AB6  5020               	movf	??_main^0,w,c
   721  007AB8  5C22               	subwf	(??_main+2)^0,w,c
   722  007ABA  5021               	movf	(??_main+1)^0,w,c
   723  007ABC  5823               	subwfb	(??_main+3)^0,w,c
   724  007ABE  B0D8               	btfsc	status,0,c
   725  007AC0  EF64  F03D         	goto	u741
   726  007AC4  EF66  F03D         	goto	u740
   727  007AC8                     u741:
   728  007AC8  EF6C  F03D         	goto	l1897
   729  007ACC                     u740:
   730  007ACC  503A               	movf	main@maxRange^0,w,c
   731  007ACE  5C36               	subwf	main@xNeutral8^0,w,c
   732  007AD0  6E34               	movwf	main@x^0,c
   733  007AD2  6A35               	clrf	(main@x+1)^0,c
   734  007AD4  A0D8               	btfss	status,0,c
   735  007AD6  0635               	decf	(main@x+1)^0,f,c
   736  007AD8                     l1897:
   737                           
   738                           ;main.c: 176:   y = GetY();
   739  007AD8  EC0D  F03B         	call	_GetY	;wreg free
   740  007ADC  C006  F038         	movff	?_GetY,main@y
   741  007AE0  C007  F039         	movff	?_GetY+1,main@y+1
   742  007AE4                     
   743                           ;main.c: 178:   y = ScaleDown(y, yFactor);
   744  007AE4  C038  F007         	movff	main@y,ScaleDown@raw12
   745  007AE8  C039  F008         	movff	main@y+1,ScaleDown@raw12+1
   746  007AEC  C02D  F009         	movff	main@yFactor,ScaleDown@c
   747  007AF0  EC6D  F03B         	call	_ScaleDown	;wreg free
   748  007AF4  6E20               	movwf	??_main^0,c
   749  007AF6  5020               	movf	??_main^0,w,c
   750  007AF8  6E38               	movwf	main@y^0,c
   751  007AFA  6A39               	clrf	(main@y+1)^0,c
   752  007AFC                     
   753                           ;main.c: 180:   if ( (y>yNeutral8) && ((y-yNeutral8) > maxRange) ) y = yNeutral8 + maxRa
      +                          nge;
   754  007AFC  5037               	movf	main@yNeutral8^0,w,c
   755  007AFE  6E20               	movwf	??_main^0,c
   756  007B00  6A21               	clrf	(??_main+1)^0,c
   757  007B02  5038               	movf	main@y^0,w,c
   758  007B04  5C20               	subwf	??_main^0,w,c
   759  007B06  5039               	movf	(main@y+1)^0,w,c
   760  007B08  5821               	subwfb	(??_main+1)^0,w,c
   761  007B0A  B0D8               	btfsc	status,0,c
   762  007B0C  EF8A  F03D         	goto	u751
   763  007B10  EF8C  F03D         	goto	u750
   764  007B14                     u751:
   765  007B14  EFA5  F03D         	goto	l402
   766  007B18                     u750:
   767  007B18  5037               	movf	main@yNeutral8^0,w,c
   768  007B1A  5C38               	subwf	main@y^0,w,c
   769  007B1C  6E20               	movwf	??_main^0,c
   770  007B1E  0E00               	movlw	0
   771  007B20  5839               	subwfb	(main@y+1)^0,w,c
   772  007B22  6E21               	movwf	(??_main+1)^0,c
   773  007B24  503A               	movf	main@maxRange^0,w,c
   774  007B26  6E22               	movwf	(??_main+2)^0,c
   775  007B28  6A23               	clrf	(??_main+3)^0,c
   776  007B2A  5020               	movf	??_main^0,w,c
   777  007B2C  5C22               	subwf	(??_main+2)^0,w,c
   778  007B2E  5021               	movf	(??_main+1)^0,w,c
   779  007B30  5823               	subwfb	(??_main+3)^0,w,c
   780  007B32  B0D8               	btfsc	status,0,c
   781  007B34  EF9E  F03D         	goto	u761
   782  007B38  EFA0  F03D         	goto	u760
   783  007B3C                     u761:
   784  007B3C  EFA5  F03D         	goto	l402
   785  007B40                     u760:
   786  007B40  5037               	movf	main@yNeutral8^0,w,c
   787  007B42  243A               	addwf	main@maxRange^0,w,c
   788  007B44  6E38               	movwf	main@y^0,c
   789  007B46  6A39               	clrf	(main@y+1)^0,c
   790  007B48  3639               	rlcf	(main@y+1)^0,f,c
   791  007B4A                     l402:
   792                           
   793                           ;main.c: 181:   if ( (y<yNeutral8) && ((yNeutral8-y) > maxRange) ) y = yNeutral8 - maxRa
      +                          nge;
   794  007B4A  5037               	movf	main@yNeutral8^0,w,c
   795  007B4C  5C38               	subwf	main@y^0,w,c
   796  007B4E  0E00               	movlw	0
   797  007B50  5839               	subwfb	(main@y+1)^0,w,c
   798  007B52  B0D8               	btfsc	status,0,c
   799  007B54  EFAE  F03D         	goto	u771
   800  007B58  EFB0  F03D         	goto	u770
   801  007B5C                     u771:
   802  007B5C  EFCB  F03D         	goto	l403
   803  007B60                     u770:
   804  007B60  5037               	movf	main@yNeutral8^0,w,c
   805  007B62  6E20               	movwf	??_main^0,c
   806  007B64  6A21               	clrf	(??_main+1)^0,c
   807  007B66  5038               	movf	main@y^0,w,c
   808  007B68  5E20               	subwf	??_main^0,f,c
   809  007B6A  5039               	movf	(main@y+1)^0,w,c
   810  007B6C  5A21               	subwfb	(??_main+1)^0,f,c
   811  007B6E  503A               	movf	main@maxRange^0,w,c
   812  007B70  6E22               	movwf	(??_main+2)^0,c
   813  007B72  6A23               	clrf	(??_main+3)^0,c
   814  007B74  5020               	movf	??_main^0,w,c
   815  007B76  5C22               	subwf	(??_main+2)^0,w,c
   816  007B78  5021               	movf	(??_main+1)^0,w,c
   817  007B7A  5823               	subwfb	(??_main+3)^0,w,c
   818  007B7C  B0D8               	btfsc	status,0,c
   819  007B7E  EFC3  F03D         	goto	u781
   820  007B82  EFC5  F03D         	goto	u780
   821  007B86                     u781:
   822  007B86  EFCB  F03D         	goto	l403
   823  007B8A                     u780:
   824  007B8A  503A               	movf	main@maxRange^0,w,c
   825  007B8C  5C37               	subwf	main@yNeutral8^0,w,c
   826  007B8E  6E38               	movwf	main@y^0,c
   827  007B90  6A39               	clrf	(main@y+1)^0,c
   828  007B92  A0D8               	btfss	status,0,c
   829  007B94  0639               	decf	(main@y+1)^0,f,c
   830  007B96                     l403:
   831                           
   832                           ;main.c: 184:   xSteps = (int16_t) x - xOld;
   833  007B96  5026               	movf	main@xOld^0,w,c
   834  007B98  5C34               	subwf	main@x^0,w,c
   835  007B9A  6E2E               	movwf	main@xSteps^0,c
   836  007B9C  5027               	movf	(main@xOld+1)^0,w,c
   837  007B9E  5835               	subwfb	(main@x+1)^0,w,c
   838  007BA0  6E2F               	movwf	(main@xSteps+1)^0,c
   839                           
   840                           ;main.c: 185:   ySteps = (int16_t) y - yOld;
   841  007BA2  5028               	movf	main@yOld^0,w,c
   842  007BA4  5C38               	subwf	main@y^0,w,c
   843  007BA6  6E30               	movwf	main@ySteps^0,c
   844  007BA8  5029               	movf	(main@yOld+1)^0,w,c
   845  007BAA  5839               	subwfb	(main@y+1)^0,w,c
   846  007BAC  6E31               	movwf	(main@ySteps+1)^0,c
   847  007BAE                     
   848                           ;main.c: 188:   xOld = x;
   849  007BAE  C034  F026         	movff	main@x,main@xOld
   850  007BB2  C035  F027         	movff	main@x+1,main@xOld+1
   851  007BB6                     
   852                           ;main.c: 189:   yOld = y;
   853  007BB6  C038  F028         	movff	main@y,main@yOld
   854  007BBA  C039  F029         	movff	main@y+1,main@yOld+1
   855                           
   856                           ;main.c: 192:         while ( (xSteps!=0) || (ySteps!=0) )
   857  007BBE  EF33  F03E         	goto	l1943
   858  007BC2                     l1915:
   859                           
   860                           ;main.c: 193:         {;main.c: 195:    if (xSteps<0){
   861  007BC2  BE2F               	btfsc	(main@xSteps+1)^0,7,c
   862  007BC4  EFE8  F03D         	goto	u790
   863  007BC8  EFE6  F03D         	goto	u791
   864  007BCC                     u791:
   865  007BCC  EFEE  F03D         	goto	l1921
   866  007BD0                     u790:
   867  007BD0                     
   868                           ;main.c: 196:     xWheel = RotateLeft(xWheel);
   869  007BD0  5032               	movf	main@xWheel^0,w,c
   870  007BD2  EC37  F03B         	call	_RotateLeft
   871  007BD6  6E32               	movwf	main@xWheel^0,c
   872  007BD8                     
   873                           ;main.c: 197:     xSteps++;
   874  007BD8  4A2E               	infsnz	main@xSteps^0,f,c
   875  007BDA  2A2F               	incf	(main@xSteps+1)^0,f,c
   876  007BDC                     l1921:
   877                           
   878                           ;main.c: 199:    if (xSteps>0){
   879  007BDC  BE2F               	btfsc	(main@xSteps+1)^0,7,c
   880  007BDE  EFF9  F03D         	goto	u801
   881  007BE2  502F               	movf	(main@xSteps+1)^0,w,c
   882  007BE4  E108               	bnz	u800
   883  007BE6  042E               	decf	main@xSteps^0,w,c
   884  007BE8  A0D8               	btfss	status,0,c
   885  007BEA  EFF9  F03D         	goto	u801
   886  007BEE  EFFB  F03D         	goto	u800
   887  007BF2                     u801:
   888  007BF2  EF02  F03E         	goto	l1927
   889  007BF6                     u800:
   890  007BF6                     
   891                           ;main.c: 200:     xWheel = RotateRight(xWheel);
   892  007BF6  5032               	movf	main@xWheel^0,w,c
   893  007BF8  EC49  F03B         	call	_RotateRight
   894  007BFC  6E32               	movwf	main@xWheel^0,c
   895  007BFE                     
   896                           ;main.c: 201:     xSteps--;
   897  007BFE  062E               	decf	main@xSteps^0,f,c
   898  007C00  A0D8               	btfss	status,0,c
   899  007C02  062F               	decf	(main@xSteps+1)^0,f,c
   900  007C04                     l1927:
   901                           
   902                           ;main.c: 205:    if (ySteps>0){
   903  007C04  BE31               	btfsc	(main@ySteps+1)^0,7,c
   904  007C06  EF0D  F03E         	goto	u811
   905  007C0A  5031               	movf	(main@ySteps+1)^0,w,c
   906  007C0C  E108               	bnz	u810
   907  007C0E  0430               	decf	main@ySteps^0,w,c
   908  007C10  A0D8               	btfss	status,0,c
   909  007C12  EF0D  F03E         	goto	u811
   910  007C16  EF0F  F03E         	goto	u810
   911  007C1A                     u811:
   912  007C1A  EF16  F03E         	goto	l1933
   913  007C1E                     u810:
   914  007C1E                     
   915                           ;main.c: 206:     yWheel = RotateRight(yWheel);
   916  007C1E  5033               	movf	main@yWheel^0,w,c
   917  007C20  EC49  F03B         	call	_RotateRight
   918  007C24  6E33               	movwf	main@yWheel^0,c
   919  007C26                     
   920                           ;main.c: 207:     ySteps--;
   921  007C26  0630               	decf	main@ySteps^0,f,c
   922  007C28  A0D8               	btfss	status,0,c
   923  007C2A  0631               	decf	(main@ySteps+1)^0,f,c
   924  007C2C                     l1933:
   925                           
   926                           ;main.c: 209:    if (ySteps<0){
   927  007C2C  BE31               	btfsc	(main@ySteps+1)^0,7,c
   928  007C2E  EF1D  F03E         	goto	u820
   929  007C32  EF1B  F03E         	goto	u821
   930  007C36                     u821:
   931  007C36  EF23  F03E         	goto	l1939
   932  007C3A                     u820:
   933  007C3A                     
   934                           ;main.c: 210:     yWheel = RotateLeft(yWheel);
   935  007C3A  5033               	movf	main@yWheel^0,w,c
   936  007C3C  EC37  F03B         	call	_RotateLeft
   937  007C40  6E33               	movwf	main@yWheel^0,c
   938  007C42                     
   939                           ;main.c: 211:     ySteps++;
   940  007C42  4A30               	infsnz	main@ySteps^0,f,c
   941  007C44  2A31               	incf	(main@ySteps+1)^0,f,c
   942  007C46                     l1939:
   943                           
   944                           ;main.c: 215:    LATB = (LATB&0b11111100)|(xWheel & 0b00000011);
   945  007C46  C032  F020         	movff	main@xWheel,??_main
   946  007C4A  0E03               	movlw	3
   947  007C4C  1620               	andwf	??_main^0,f,c
   948  007C4E  50BB               	movf	187,w,c	;volatile
   949  007C50  0BFC               	andlw	252
   950  007C52  1020               	iorwf	??_main^0,w,c
   951  007C54  6EBB               	movwf	187,c	;volatile
   952  007C56                     
   953                           ;main.c: 216:    LATA = (LATA&0b00111111)|(yWheel & 0b11000000);
   954  007C56  C033  F020         	movff	main@yWheel,??_main
   955  007C5A  0EC0               	movlw	192
   956  007C5C  1620               	andwf	??_main^0,f,c
   957  007C5E  50BA               	movf	186,w,c	;volatile
   958  007C60  0B3F               	andlw	63
   959  007C62  1020               	iorwf	??_main^0,w,c
   960  007C64  6EBA               	movwf	186,c	;volatile
   961  007C66                     l1943:
   962                           
   963                           ;main.c: 192:         while ( (xSteps!=0) || (ySteps!=0) )
   964  007C66  502E               	movf	main@xSteps^0,w,c
   965  007C68  102F               	iorwf	(main@xSteps+1)^0,w,c
   966  007C6A  A4D8               	btfss	status,2,c
   967  007C6C  EF3A  F03E         	goto	u831
   968  007C70  EF3C  F03E         	goto	u830
   969  007C74                     u831:
   970  007C74  EFE1  F03D         	goto	l1915
   971  007C78                     u830:
   972  007C78  5030               	movf	main@ySteps^0,w,c
   973  007C7A  1031               	iorwf	(main@ySteps+1)^0,w,c
   974  007C7C  A4D8               	btfss	status,2,c
   975  007C7E  EF43  F03E         	goto	u841
   976  007C82  EF45  F03E         	goto	u840
   977  007C86                     u841:
   978  007C86  EFE1  F03D         	goto	l1915
   979  007C8A                     u840:
   980  007C8A  EF19  F03D         	goto	l399
   981  007C8E  EFFE  F03F         	goto	start
   982  007C92                     __end_of_main:
   983                           	callstack 0
   984                           
   985 ;; *************** function _ScaleDown *****************
   986 ;; Defined at:
   987 ;;		line 350 in file "main.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  raw12           2    6[COMRAM] unsigned short 
   990 ;;  c               1    8[COMRAM] unsigned char 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      unsigned char 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1002 ;;      Params:         3       0       0       0       0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1004 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1005 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1006 ;;Total ram usage:        4 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 1
  1009 ;; This function calls:
  1010 ;;		___wmul
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text1
  1017  0076DA                     __ptext1:
  1018                           	callstack 0
  1019  0076DA                     _ScaleDown:
  1020                           	callstack 29
  1021  0076DA                     
  1022                           ;main.c: 351:  return (uint8_t) ( (raw12*c) >> 4);
  1023  0076DA  C009  F001         	movff	ScaleDown@c,___wmul@multiplier
  1024  0076DE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1025  0076E0  C007  F003         	movff	ScaleDown@raw12,___wmul@multiplicand
  1026  0076E4  C008  F004         	movff	ScaleDown@raw12+1,___wmul@multiplicand+1
  1027  0076E8  EC80  F03B         	call	___wmul	;wreg free
  1028  0076EC  0E04               	movlw	4
  1029  0076EE  6E0A               	movwf	??_ScaleDown^0,c
  1030  0076F0                     u565:
  1031  0076F0  90D8               	bcf	status,0,c
  1032  0076F2  3202               	rrcf	(?___wmul+1)^0,f,c
  1033  0076F4  3201               	rrcf	?___wmul^0,f,c
  1034  0076F6  2E0A               	decfsz	??_ScaleDown^0,f,c
  1035  0076F8  EF78  F03B         	goto	u565
  1036  0076FC  5001               	movf	?___wmul^0,w,c
  1037  0076FE  0012               	return		;funcret
  1038  007700                     __end_of_ScaleDown:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function ___wmul *****************
  1042 ;; Defined at:
  1043 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  multiplier      2    0[COMRAM] unsigned int 
  1046 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  product         2    4[COMRAM] unsigned int 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  2    0[COMRAM] unsigned int 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, prodl, prodh
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         4       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_ScaleDown
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text2
  1072  007700                     __ptext2:
  1073                           	callstack 0
  1074  007700                     ___wmul:
  1075                           	callstack 29
  1076  007700  5001               	movf	___wmul@multiplier^0,w,c
  1077  007702  0203               	mulwf	___wmul@multiplicand^0,c
  1078  007704  006F FFCC  F005    	movff	prodl,___wmul@product
  1079  00770A  006F FFD0  F006    	movff	prodh,___wmul@product+1
  1080  007710  5001               	movf	___wmul@multiplier^0,w,c
  1081  007712  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1082  007714  50F3               	movf	243,w,c
  1083  007716  2606               	addwf	(___wmul@product+1)^0,f,c
  1084  007718  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1085  00771A  0203               	mulwf	___wmul@multiplicand^0,c
  1086  00771C  50F3               	movf	243,w,c
  1087  00771E  2606               	addwf	(___wmul@product+1)^0,f,c
  1088  007720  C005  F001         	movff	___wmul@product,?___wmul
  1089  007724  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1090  007728  0012               	return		;funcret
  1091  00772A                     __end_of___wmul:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _SYSTEM_Initialize *****************
  1095 ;; Defined at:
  1096 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 1
  1117 ;; This function calls:
  1118 ;;		_ADCC_Initialize
  1119 ;;		_OSCILLATOR_Initialize
  1120 ;;		_PIN_MANAGER_Initialize
  1121 ;;		_PMD_Initialize
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text3
  1128  00762A                     __ptext3:
  1129                           	callstack 0
  1130  00762A                     _SYSTEM_Initialize:
  1131                           	callstack 29
  1132  00762A                     
  1133                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  1134  00762A  EC5B  F03B         	call	_PMD_Initialize	;wreg free
  1135                           
  1136                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1137  00762E  EC4B  F03C         	call	_PIN_MANAGER_Initialize	;wreg free
  1138                           
  1139                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1140  007632  EC1E  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  1141                           
  1142                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  1143  007636  ECEB  F03B         	call	_ADCC_Initialize	;wreg free
  1144  00763A  0012               	return		;funcret
  1145  00763C                     __end_of_SYSTEM_Initialize:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _PMD_Initialize *****************
  1149 ;; Defined at:
  1150 ;;		line 72 in file "mcc_generated_files/mcc.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_SYSTEM_Initialize
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text4
  1178  0076B6                     __ptext4:
  1179                           	callstack 0
  1180  0076B6                     _PMD_Initialize:
  1181                           	callstack 29
  1182  0076B6                     
  1183                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  1184  0076B6  0E00               	movlw	0
  1185  0076B8  0139               	movlb	57	; () banked
  1186  0076BA  6FC0               	movwf	192,b	;volatile
  1187                           
  1188                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  1189  0076BC  0E00               	movlw	0
  1190  0076BE  6FC1               	movwf	193,b	;volatile
  1191                           
  1192                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  1193  0076C0  0E00               	movlw	0
  1194  0076C2  6FC2               	movwf	194,b	;volatile
  1195                           
  1196                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  1197  0076C4  0E00               	movlw	0
  1198  0076C6  6FC3               	movwf	195,b	;volatile
  1199                           
  1200                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  1201  0076C8  0E00               	movlw	0
  1202  0076CA  6FC4               	movwf	196,b	;volatile
  1203                           
  1204                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  1205  0076CC  0E00               	movlw	0
  1206  0076CE  6FC5               	movwf	197,b	;volatile
  1207                           
  1208                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
  1209  0076D0  0E00               	movlw	0
  1210  0076D2  6FC6               	movwf	198,b	;volatile
  1211                           
  1212                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
  1213  0076D4  0E00               	movlw	0
  1214  0076D6  6FC7               	movwf	199,b	;volatile
  1215  0076D8                     
  1216                           ; BSR set to: 57
  1217  0076D8  0012               	return		;funcret
  1218  0076DA                     __end_of_PMD_Initialize:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _PIN_MANAGER_Initialize *****************
  1222 ;; Defined at:
  1223 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_SYSTEM_Initialize
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text5
  1251  007896                     __ptext5:
  1252                           	callstack 0
  1253  007896                     _PIN_MANAGER_Initialize:
  1254                           	callstack 29
  1255  007896                     
  1256                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0xC0;
  1257  007896  0EC0               	movlw	192
  1258  007898  6EBA               	movwf	186,c	;volatile
  1259                           
  1260                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x03;
  1261  00789A  0E03               	movlw	3
  1262  00789C  6EBB               	movwf	187,c	;volatile
  1263                           
  1264                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0xF0;
  1265  00789E  0EF0               	movlw	240
  1266  0078A0  6EBC               	movwf	188,c	;volatile
  1267                           
  1268                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  1269  0078A2  0E3F               	movlw	63
  1270  0078A4  6EC2               	movwf	194,c	;volatile
  1271                           
  1272                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFC;
  1273  0078A6  0EFC               	movlw	252
  1274  0078A8  6EC3               	movwf	195,c	;volatile
  1275                           
  1276                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xEF;
  1277  0078AA  0EEF               	movlw	239
  1278  0078AC  6EC4               	movwf	196,c	;volatile
  1279                           
  1280                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xEF;
  1281  0078AE  0EEF               	movlw	239
  1282  0078B0  013A               	movlb	58	; () banked
  1283  0078B2  6F60               	movwf	96,b	;volatile
  1284                           
  1285                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFC;
  1286  0078B4  0EFC               	movlw	252
  1287  0078B6  6F50               	movwf	80,b	;volatile
  1288                           
  1289                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x3F;
  1290  0078B8  0E3F               	movlw	63
  1291  0078BA  6F40               	movwf	64,b	;volatile
  1292                           
  1293                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  1294  0078BC  0E00               	movlw	0
  1295  0078BE  6F81               	movwf	129,b	;volatile
  1296                           
  1297                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  1298  0078C0  0E00               	movlw	0
  1299  0078C2  6F51               	movwf	81,b	;volatile
  1300                           
  1301                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  1302  0078C4  0E00               	movlw	0
  1303  0078C6  6F41               	movwf	65,b	;volatile
  1304                           
  1305                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  1306  0078C8  0E00               	movlw	0
  1307  0078CA  6F61               	movwf	97,b	;volatile
  1308                           
  1309                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
  1310  0078CC  0E00               	movlw	0
  1311  0078CE  6F5A               	movwf	90,b	;volatile
  1312                           
  1313                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
  1314  0078D0  0E00               	movlw	0
  1315  0078D2  6F5B               	movwf	91,b	;volatile
  1316                           
  1317                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
  1318  0078D4  0E00               	movlw	0
  1319  0078D6  6F6A               	movwf	106,b	;volatile
  1320                           
  1321                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
  1322  0078D8  0E00               	movlw	0
  1323  0078DA  6F6B               	movwf	107,b	;volatile
  1324                           
  1325                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1326  0078DC  0E00               	movlw	0
  1327  0078DE  6F42               	movwf	66,b	;volatile
  1328                           
  1329                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1330  0078E0  0E00               	movlw	0
  1331  0078E2  6F52               	movwf	82,b	;volatile
  1332                           
  1333                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1334  0078E4  0E00               	movlw	0
  1335  0078E6  6F62               	movwf	98,b	;volatile
  1336  0078E8                     
  1337                           ; BSR set to: 58
  1338                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
  1339  0078E8  6943               	setf	67,b	;volatile
  1340  0078EA                     
  1341                           ; BSR set to: 58
  1342                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
  1343  0078EA  6953               	setf	83,b	;volatile
  1344  0078EC                     
  1345                           ; BSR set to: 58
  1346                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
  1347  0078EC  6963               	setf	99,b	;volatile
  1348  0078EE                     
  1349                           ; BSR set to: 58
  1350                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
  1351  0078EE  6944               	setf	68,b	;volatile
  1352  0078F0                     
  1353                           ; BSR set to: 58
  1354                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
  1355  0078F0  6954               	setf	84,b	;volatile
  1356  0078F2                     
  1357                           ; BSR set to: 58
  1358                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
  1359  0078F2  6964               	setf	100,b	;volatile
  1360                           
  1361                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
  1362  0078F4  0E08               	movlw	8
  1363  0078F6  6F84               	movwf	132,b	;volatile
  1364  0078F8                     
  1365                           ; BSR set to: 58
  1366  0078F8  0012               	return		;funcret
  1367  0078FA                     __end_of_PIN_MANAGER_Initialize:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _OSCILLATOR_Initialize *****************
  1371 ;; Defined at:
  1372 ;;		line 58 in file "mcc_generated_files/mcc.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1386 ;;      Params:         0       0       0       0       0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_SYSTEM_Initialize
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text6
  1400  00763C                     __ptext6:
  1401                           	callstack 0
  1402  00763C                     _OSCILLATOR_Initialize:
  1403                           	callstack 29
  1404  00763C                     
  1405                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  1406  00763C  0E60               	movlw	96
  1407  00763E  0139               	movlb	57	; () banked
  1408  007640  6FD9               	movwf	217,b	;volatile
  1409                           
  1410                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  1411  007642  0E00               	movlw	0
  1412  007644  6FDB               	movwf	219,b	;volatile
  1413                           
  1414                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  1415  007646  0E00               	movlw	0
  1416  007648  6FDD               	movwf	221,b	;volatile
  1417                           
  1418                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x06;
  1419  00764A  0E06               	movlw	6
  1420  00764C  6FDF               	movwf	223,b	;volatile
  1421                           
  1422                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  1423  00764E  0E00               	movlw	0
  1424  007650  6FDE               	movwf	222,b	;volatile
  1425  007652                     
  1426                           ; BSR set to: 57
  1427  007652  0012               	return		;funcret
  1428  007654                     __end_of_OSCILLATOR_Initialize:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _ADCC_Initialize *****************
  1432 ;; Defined at:
  1433 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_SYSTEM_Initialize
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text7
  1461  0077D6                     __ptext7:
  1462                           	callstack 0
  1463  0077D6                     _ADCC_Initialize:
  1464                           	callstack 29
  1465  0077D6                     
  1466                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1467  0077D6  0E00               	movlw	0
  1468  0077D8  013E               	movlb	62	; () banked
  1469  0077DA  6FDE               	movwf	222,b	;volatile
  1470                           
  1471                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1472  0077DC  0E00               	movlw	0
  1473  0077DE  6FDF               	movwf	223,b	;volatile
  1474                           
  1475                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1476  0077E0  0E00               	movlw	0
  1477  0077E2  6FE0               	movwf	224,b	;volatile
  1478                           
  1479                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1480  0077E4  0E00               	movlw	0
  1481  0077E6  6FE1               	movwf	225,b	;volatile
  1482                           
  1483                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1484  0077E8  0E00               	movlw	0
  1485  0077EA  6FE4               	movwf	228,b	;volatile
  1486                           
  1487                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1488  0077EC  0E00               	movlw	0
  1489  0077EE  6FE5               	movwf	229,b	;volatile
  1490                           
  1491                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  1492  0077F0  0E00               	movlw	0
  1493  0077F2  6FEA               	movwf	234,b	;volatile
  1494                           
  1495                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  1496  0077F4  0E00               	movlw	0
  1497  0077F6  6FEC               	movwf	236,b	;volatile
  1498                           
  1499                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  1500  0077F8  0E00               	movlw	0
  1501  0077FA  6FF1               	movwf	241,b	;volatile
  1502                           
  1503                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  1504  0077FC  0E00               	movlw	0
  1505  0077FE  6FF3               	movwf	243,b	;volatile
  1506                           
  1507                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  1508  007800  0E00               	movlw	0
  1509  007802  6FF4               	movwf	244,b	;volatile
  1510                           
  1511                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  1512  007804  0E00               	movlw	0
  1513  007806  6FF5               	movwf	245,b	;volatile
  1514                           
  1515                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  1516  007808  0E00               	movlw	0
  1517  00780A  6FF6               	movwf	246,b	;volatile
  1518                           
  1519                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  1520  00780C  0E00               	movlw	0
  1521  00780E  6FF7               	movwf	247,b	;volatile
  1522                           
  1523                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  1524  007810  0E00               	movlw	0
  1525  007812  6FF9               	movwf	249,b	;volatile
  1526                           
  1527                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  1528  007814  0E00               	movlw	0
  1529  007816  6FFA               	movwf	250,b	;volatile
  1530                           
  1531                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  1532  007818  0E00               	movlw	0
  1533  00781A  6FFB               	movwf	251,b	;volatile
  1534                           
  1535                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  1536  00781C  0E00               	movlw	0
  1537  00781E  6FFC               	movwf	252,b	;volatile
  1538                           
  1539                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  1540  007820  0E00               	movlw	0
  1541  007822  6FFD               	movwf	253,b	;volatile
  1542                           
  1543                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  1544  007824  0E00               	movlw	0
  1545  007826  6FFE               	movwf	254,b	;volatile
  1546                           
  1547                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  1548  007828  0E1F               	movlw	31
  1549  00782A  6FFF               	movwf	255,b	;volatile
  1550                           
  1551                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  1552  00782C  0E84               	movlw	132
  1553  00782E  6FF8               	movwf	248,b	;volatile
  1554  007830                     
  1555                           ; BSR set to: 62
  1556  007830  0012               	return		;funcret
  1557  007832                     __end_of_ADCC_Initialize:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _RotateRight *****************
  1561 ;; Defined at:
  1562 ;;		line 241 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  cData           1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  cData           1    1[COMRAM] unsigned char 
  1567 ;;  result          1    0[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      unsigned char 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1577 ;;      Params:         0       0       0       0       0       0       0       0       0
  1578 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1580 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1581 ;;Total ram usage:        2 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text8
  1591  007692                     __ptext8:
  1592                           	callstack 0
  1593  007692                     _RotateRight:
  1594                           	callstack 30
  1595                           
  1596                           ; BSR set to: 62
  1597                           ;incstack = 0
  1598                           ;RotateRight@cData stored from wreg
  1599  007692  6E02               	movwf	RotateRight@cData^0,c
  1600  007694                     
  1601                           ;main.c: 242:  uint8_t result;;main.c: 243:  if ( cData & (1<<0) )
  1602  007694  A002               	btfss	RotateRight@cData^0,0,c
  1603  007696  EF4F  F03B         	goto	u251
  1604  00769A  EF51  F03B         	goto	u250
  1605  00769E                     u251:
  1606  00769E  EF56  F03B         	goto	l1375
  1607  0076A2                     u250:
  1608  0076A2                     
  1609                           ;main.c: 244:   result = (cData>>1)|(1<<7);
  1610  0076A2  80D8               	bsf	status,0,c
  1611  0076A4  3002               	rrcf	RotateRight@cData^0,w,c
  1612  0076A6  6E01               	movwf	RotateRight@result^0,c
  1613  0076A8  EF59  F03B         	goto	l1377
  1614  0076AC                     l1375:
  1615                           
  1616                           ;main.c: 246:   result = (cData>>1);
  1617  0076AC  90D8               	bcf	status,0,c
  1618  0076AE  3002               	rrcf	RotateRight@cData^0,w,c
  1619  0076B0  6E01               	movwf	RotateRight@result^0,c
  1620  0076B2                     l1377:
  1621                           
  1622                           ;main.c: 247:  return result;
  1623  0076B2  5001               	movf	RotateRight@result^0,w,c
  1624  0076B4  0012               	return		;funcret
  1625  0076B6                     __end_of_RotateRight:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _RotateLeft *****************
  1629 ;; Defined at:
  1630 ;;		line 232 in file "main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  cData           1    wreg     unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  cData           1    1[COMRAM] unsigned char 
  1635 ;;  result          1    0[COMRAM] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      unsigned char 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0
  1646 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1648 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1649 ;;Total ram usage:        2 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text9
  1659  00766E                     __ptext9:
  1660                           	callstack 0
  1661  00766E                     _RotateLeft:
  1662                           	callstack 30
  1663                           
  1664                           ;incstack = 0
  1665                           ;RotateLeft@cData stored from wreg
  1666  00766E  6E02               	movwf	RotateLeft@cData^0,c
  1667  007670                     
  1668                           ;main.c: 233:  uint8_t result;;main.c: 234:  if ( cData & (1<<7) )
  1669  007670  AE02               	btfss	RotateLeft@cData^0,7,c
  1670  007672  EF3D  F03B         	goto	u241
  1671  007676  EF3F  F03B         	goto	u240
  1672  00767A                     u241:
  1673  00767A  EF44  F03B         	goto	l1365
  1674  00767E                     u240:
  1675  00767E                     
  1676                           ;main.c: 235:   result = (cData<<1)|(1<<0);
  1677  00767E  80D8               	bsf	status,0,c
  1678  007680  3402               	rlcf	RotateLeft@cData^0,w,c
  1679  007682  6E01               	movwf	RotateLeft@result^0,c
  1680  007684  EF47  F03B         	goto	l1367
  1681  007688                     l1365:
  1682                           
  1683                           ;main.c: 237:   result = (cData<<1);
  1684  007688  5002               	movf	RotateLeft@cData^0,w,c
  1685  00768A  2402               	addwf	RotateLeft@cData^0,w,c
  1686  00768C  6E01               	movwf	RotateLeft@result^0,c
  1687  00768E                     l1367:
  1688                           
  1689                           ;main.c: 238:  return result;
  1690  00768E  5001               	movf	RotateLeft@result^0,w,c
  1691  007690  0012               	return		;funcret
  1692  007692                     __end_of_RotateLeft:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _DATAEE_ReadByte *****************
  1696 ;; Defined at:
  1697 ;;		line 186 in file "mcc_generated_files/memory.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  bAdd            1    wreg     unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  bAdd            1    0[COMRAM] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      unsigned char 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        1 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text10
  1725  007654                     __ptext10:
  1726                           	callstack 0
  1727  007654                     _DATAEE_ReadByte:
  1728                           	callstack 30
  1729                           
  1730                           ;incstack = 0
  1731                           ;DATAEE_ReadByte@bAdd stored from wreg
  1732  007654  6E01               	movwf	DATAEE_ReadByte@bAdd^0,c
  1733  007656                     
  1734                           ;mcc_generated_files/memory.c: 186: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 187: {;mcc_generated_files/memory.c: 188:     NVMADRL = (uint8_t)(bAdd &
      +                           0xFF);
  1735  007656  0060  F007  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
  1736  00765C                     
  1737                           ;mcc_generated_files/memory.c: 189:     NVMCON1bits.NVMREG = 0;
  1738  00765C  0E3F               	movlw	-193
  1739  00765E  0139               	movlb	57	; () banked
  1740  007660  17E5               	andwf	229,f,b	;volsfr
  1741  007662                     
  1742                           ; BSR set to: 57
  1743                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.RD = 1;
  1744  007662  81E5               	bsf	229,0,b	;volsfr
  1745  007664                     
  1746                           ; BSR set to: 57
  1747                           ;mcc_generated_files/memory.c: 191:     __nop();
  1748  007664  F000               	nop	
  1749  007666                     
  1750                           ;mcc_generated_files/memory.c: 192:     __nop();
  1751  007666  F000               	nop	
  1752  007668                     
  1753                           ;mcc_generated_files/memory.c: 194:     return (NVMDAT);
  1754  007668  0139               	movlb	57	; () banked
  1755  00766A  51E3               	movf	227,w,b	;volatile
  1756  00766C                     
  1757                           ; BSR set to: 57
  1758  00766C  0012               	return		;funcret
  1759  00766E                     __end_of_DATAEE_ReadByte:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _Calibration *****************
  1763 ;; Defined at:
  1764 ;;		line 250 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  temp            2   29[COMRAM] unsigned short 
  1769 ;;  yNeutral16      2   27[COMRAM] unsigned short 
  1770 ;;  xNeutral16      2   25[COMRAM] unsigned short 
  1771 ;;  yMax            2   23[COMRAM] unsigned short 
  1772 ;;  yMin            2   21[COMRAM] unsigned short 
  1773 ;;  xMax            2   19[COMRAM] unsigned short 
  1774 ;;  xMin            2   17[COMRAM] unsigned short 
  1775 ;;  yFactor         2   15[COMRAM] unsigned short 
  1776 ;;  xFactor         2   13[COMRAM] unsigned short 
  1777 ;;  counter         2   11[COMRAM] unsigned short 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0
  1788 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1789 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1790 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1791 ;;Total ram usage:       24 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 2
  1794 ;; This function calls:
  1795 ;;		_DATAEE_WriteByte
  1796 ;;		_GetX
  1797 ;;		_GetY
  1798 ;;		___lwdiv
  1799 ;;		___lwmod
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text11
  1806  007C92                     __ptext11:
  1807                           	callstack 0
  1808  007C92                     _Calibration:
  1809                           	callstack 28
  1810  007C92                     
  1811                           ;main.c: 252:  uint16_t temp;;main.c: 253:  uint16_t xNeutral16, yNeutral16;;main.c: 254
      +                          :  uint16_t xMin, xMax, yMin, yMax;;main.c: 255:  uint16_t counter = 0;
  1812  007C92  0E00               	movlw	0
  1813  007C94  6E0D               	movwf	(Calibration@counter+1)^0,c
  1814  007C96  0E00               	movlw	0
  1815  007C98  6E0C               	movwf	Calibration@counter^0,c
  1816  007C9A                     
  1817                           ;main.c: 256:  uint16_t xFactor, yFactor;;main.c: 259:  DATAEE_WriteByte(firstPowerOn_ad
      +                          dress, 0x00);
  1818  007C9A  0E00               	movlw	0
  1819  007C9C  6E01               	movwf	DATAEE_WriteByte@bData^0,c
  1820  007C9E  0E04               	movlw	4
  1821  007CA0  ECC8  F03B         	call	_DATAEE_WriteByte
  1822  007CA4                     
  1823                           ;main.c: 262:  xNeutral16 = GetX();
  1824  007CA4  EC05  F03B         	call	_GetX	;wreg free
  1825  007CA8  C006  F01A         	movff	?_GetX,Calibration@xNeutral16
  1826  007CAC  C007  F01B         	movff	?_GetX+1,Calibration@xNeutral16+1
  1827  007CB0                     
  1828                           ;main.c: 263:  yNeutral16 = GetY();
  1829  007CB0  EC0D  F03B         	call	_GetY	;wreg free
  1830  007CB4  C006  F01C         	movff	?_GetY,Calibration@yNeutral16
  1831  007CB8  C007  F01D         	movff	?_GetY+1,Calibration@yNeutral16+1
  1832  007CBC                     
  1833                           ;main.c: 266:  xMin = xNeutral16;
  1834  007CBC  C01A  F012         	movff	Calibration@xNeutral16,Calibration@xMin
  1835  007CC0  C01B  F013         	movff	Calibration@xNeutral16+1,Calibration@xMin+1
  1836  007CC4                     
  1837                           ;main.c: 267:  xMax = xNeutral16;
  1838  007CC4  C01A  F014         	movff	Calibration@xNeutral16,Calibration@xMax
  1839  007CC8  C01B  F015         	movff	Calibration@xNeutral16+1,Calibration@xMax+1
  1840  007CCC                     
  1841                           ;main.c: 268:  yMin = yNeutral16;
  1842  007CCC  C01C  F016         	movff	Calibration@yNeutral16,Calibration@yMin
  1843  007CD0  C01D  F017         	movff	Calibration@yNeutral16+1,Calibration@yMin+1
  1844  007CD4                     
  1845                           ;main.c: 269:  yMax = yNeutral16;
  1846  007CD4  C01C  F018         	movff	Calibration@yNeutral16,Calibration@yMax
  1847  007CD8  C01D  F019         	movff	Calibration@yNeutral16+1,Calibration@yMax+1
  1848  007CDC                     l1765:
  1849                           
  1850                           ;main.c: 273:  {;main.c: 276:   temp = GetX();
  1851  007CDC  EC05  F03B         	call	_GetX	;wreg free
  1852  007CE0  C006  F01E         	movff	?_GetX,Calibration@temp
  1853  007CE4  C007  F01F         	movff	?_GetX+1,Calibration@temp+1
  1854                           
  1855                           ;main.c: 277:   if (temp > xMax) xMax = temp;
  1856  007CE8  501E               	movf	Calibration@temp^0,w,c
  1857  007CEA  5C14               	subwf	Calibration@xMax^0,w,c
  1858  007CEC  501F               	movf	(Calibration@temp+1)^0,w,c
  1859  007CEE  5815               	subwfb	(Calibration@xMax+1)^0,w,c
  1860  007CF0  B0D8               	btfsc	status,0,c
  1861  007CF2  EF7D  F03E         	goto	u571
  1862  007CF6  EF7F  F03E         	goto	u570
  1863  007CFA                     u571:
  1864  007CFA  EF83  F03E         	goto	l1769
  1865  007CFE                     u570:
  1866  007CFE  C01E  F014         	movff	Calibration@temp,Calibration@xMax
  1867  007D02  C01F  F015         	movff	Calibration@temp+1,Calibration@xMax+1
  1868  007D06                     l1769:
  1869                           
  1870                           ;main.c: 278:   if (temp < xMin) xMin = temp;
  1871  007D06  5012               	movf	Calibration@xMin^0,w,c
  1872  007D08  5C1E               	subwf	Calibration@temp^0,w,c
  1873  007D0A  5013               	movf	(Calibration@xMin+1)^0,w,c
  1874  007D0C  581F               	subwfb	(Calibration@temp+1)^0,w,c
  1875  007D0E  B0D8               	btfsc	status,0,c
  1876  007D10  EF8C  F03E         	goto	u581
  1877  007D14  EF8E  F03E         	goto	u580
  1878  007D18                     u581:
  1879  007D18  EF92  F03E         	goto	l1773
  1880  007D1C                     u580:
  1881  007D1C  C01E  F012         	movff	Calibration@temp,Calibration@xMin
  1882  007D20  C01F  F013         	movff	Calibration@temp+1,Calibration@xMin+1
  1883  007D24                     l1773:
  1884                           
  1885                           ;main.c: 281:   temp = GetY();
  1886  007D24  EC0D  F03B         	call	_GetY	;wreg free
  1887  007D28  C006  F01E         	movff	?_GetY,Calibration@temp
  1888  007D2C  C007  F01F         	movff	?_GetY+1,Calibration@temp+1
  1889  007D30                     
  1890                           ;main.c: 282:   if (temp > yMax) yMax = temp;
  1891  007D30  501E               	movf	Calibration@temp^0,w,c
  1892  007D32  5C18               	subwf	Calibration@yMax^0,w,c
  1893  007D34  501F               	movf	(Calibration@temp+1)^0,w,c
  1894  007D36  5819               	subwfb	(Calibration@yMax+1)^0,w,c
  1895  007D38  B0D8               	btfsc	status,0,c
  1896  007D3A  EFA1  F03E         	goto	u591
  1897  007D3E  EFA3  F03E         	goto	u590
  1898  007D42                     u591:
  1899  007D42  EFA7  F03E         	goto	l1779
  1900  007D46                     u590:
  1901  007D46  C01E  F018         	movff	Calibration@temp,Calibration@yMax
  1902  007D4A  C01F  F019         	movff	Calibration@temp+1,Calibration@yMax+1
  1903  007D4E                     l1779:
  1904                           
  1905                           ;main.c: 283:   if (temp < yMin) yMin = temp;
  1906  007D4E  5016               	movf	Calibration@yMin^0,w,c
  1907  007D50  5C1E               	subwf	Calibration@temp^0,w,c
  1908  007D52  5017               	movf	(Calibration@yMin+1)^0,w,c
  1909  007D54  581F               	subwfb	(Calibration@temp+1)^0,w,c
  1910  007D56  B0D8               	btfsc	status,0,c
  1911  007D58  EFB0  F03E         	goto	u601
  1912  007D5C  EFB2  F03E         	goto	u600
  1913  007D60                     u601:
  1914  007D60  EFB6  F03E         	goto	l1783
  1915  007D64                     u600:
  1916  007D64  C01E  F016         	movff	Calibration@temp,Calibration@yMin
  1917  007D68  C01F  F017         	movff	Calibration@temp+1,Calibration@yMin+1
  1918  007D6C                     l1783:
  1919                           
  1920                           ;main.c: 286:   counter++;
  1921  007D6C  4A0C               	infsnz	Calibration@counter^0,f,c
  1922  007D6E  2A0D               	incf	(Calibration@counter+1)^0,f,c
  1923  007D70                     
  1924                           ;main.c: 289:   if (counter>4000)
  1925  007D70  0EA1               	movlw	161
  1926  007D72  5C0C               	subwf	Calibration@counter^0,w,c
  1927  007D74  0E0F               	movlw	15
  1928  007D76  580D               	subwfb	(Calibration@counter+1)^0,w,c
  1929  007D78  A0D8               	btfss	status,0,c
  1930  007D7A  EFC1  F03E         	goto	u611
  1931  007D7E  EFC3  F03E         	goto	u610
  1932  007D82                     u611:
  1933  007D82  EF6E  F03E         	goto	l1765
  1934  007D86                     u610:
  1935  007D86                     
  1936                           ;main.c: 290:   {;main.c: 292:    counter = 0;
  1937  007D86  0E00               	movlw	0
  1938  007D88  6E0D               	movwf	(Calibration@counter+1)^0,c
  1939  007D8A  0E00               	movlw	0
  1940  007D8C  6E0C               	movwf	Calibration@counter^0,c
  1941  007D8E                     
  1942                           ;main.c: 295:    if ( (xMax - xNeutral16) < (xNeutral16 - xMin) ){
  1943  007D8E  5012               	movf	Calibration@xMin^0,w,c
  1944  007D90  5C1A               	subwf	Calibration@xNeutral16^0,w,c
  1945  007D92  6E08               	movwf	??_Calibration^0,c
  1946  007D94  5013               	movf	(Calibration@xMin+1)^0,w,c
  1947  007D96  581B               	subwfb	(Calibration@xNeutral16+1)^0,w,c
  1948  007D98  6E09               	movwf	(??_Calibration+1)^0,c
  1949  007D9A  501A               	movf	Calibration@xNeutral16^0,w,c
  1950  007D9C  5C14               	subwf	Calibration@xMax^0,w,c
  1951  007D9E  6E0A               	movwf	(??_Calibration+2)^0,c
  1952  007DA0  501B               	movf	(Calibration@xNeutral16+1)^0,w,c
  1953  007DA2  5815               	subwfb	(Calibration@xMax+1)^0,w,c
  1954  007DA4  6E0B               	movwf	(??_Calibration+3)^0,c
  1955  007DA6  5008               	movf	??_Calibration^0,w,c
  1956  007DA8  5C0A               	subwf	(??_Calibration+2)^0,w,c
  1957  007DAA  5009               	movf	(??_Calibration+1)^0,w,c
  1958  007DAC  580B               	subwfb	(??_Calibration+3)^0,w,c
  1959  007DAE  B0D8               	btfsc	status,0,c
  1960  007DB0  EFDC  F03E         	goto	u621
  1961  007DB4  EFDE  F03E         	goto	u620
  1962  007DB8                     u621:
  1963  007DB8  EFE6  F03E         	goto	l1793
  1964  007DBC                     u620:
  1965  007DBC                     
  1966                           ;main.c: 296:     temp = xMax - xNeutral16;
  1967  007DBC  501A               	movf	Calibration@xNeutral16^0,w,c
  1968  007DBE  5C14               	subwf	Calibration@xMax^0,w,c
  1969  007DC0  6E1E               	movwf	Calibration@temp^0,c
  1970  007DC2  501B               	movf	(Calibration@xNeutral16+1)^0,w,c
  1971  007DC4  5815               	subwfb	(Calibration@xMax+1)^0,w,c
  1972  007DC6  6E1F               	movwf	(Calibration@temp+1)^0,c
  1973                           
  1974                           ;main.c: 297:    }
  1975  007DC8  EFEC  F03E         	goto	l1795
  1976  007DCC                     l1793:
  1977                           
  1978                           ;main.c: 299:     temp = xNeutral16 - xMin;
  1979  007DCC  5012               	movf	Calibration@xMin^0,w,c
  1980  007DCE  5C1A               	subwf	Calibration@xNeutral16^0,w,c
  1981  007DD0  6E1E               	movwf	Calibration@temp^0,c
  1982  007DD2  5013               	movf	(Calibration@xMin+1)^0,w,c
  1983  007DD4  581B               	subwfb	(Calibration@xNeutral16+1)^0,w,c
  1984  007DD6  6E1F               	movwf	(Calibration@temp+1)^0,c
  1985  007DD8                     l1795:
  1986                           
  1987                           ;main.c: 302:    xFactor = ((81*256)/temp);
  1988  007DD8  0E51               	movlw	81
  1989  007DDA  6E02               	movwf	(___lwdiv@dividend+1)^0,c
  1990  007DDC  0E00               	movlw	0
  1991  007DDE  6E01               	movwf	___lwdiv@dividend^0,c
  1992  007DE0  C01E  F003         	movff	Calibration@temp,___lwdiv@divisor
  1993  007DE4  C01F  F004         	movff	Calibration@temp+1,___lwdiv@divisor+1
  1994  007DE8  EC7D  F03C         	call	___lwdiv	;wreg free
  1995  007DEC  C001  F00E         	movff	?___lwdiv,Calibration@xFactor
  1996  007DF0  C002  F00F         	movff	?___lwdiv+1,Calibration@xFactor+1
  1997  007DF4                     
  1998                           ;main.c: 304:    if ( ((81*256)%temp) > 0 ) xFactor++;
  1999  007DF4  0E51               	movlw	81
  2000  007DF6  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2001  007DF8  0E00               	movlw	0
  2002  007DFA  6E01               	movwf	___lwmod@dividend^0,c
  2003  007DFC  C01E  F003         	movff	Calibration@temp,___lwmod@divisor
  2004  007E00  C01F  F004         	movff	Calibration@temp+1,___lwmod@divisor+1
  2005  007E04  EC19  F03C         	call	___lwmod	;wreg free
  2006  007E08  5001               	movf	?___lwmod^0,w,c
  2007  007E0A  1002               	iorwf	(?___lwmod+1)^0,w,c
  2008  007E0C  B4D8               	btfsc	status,2,c
  2009  007E0E  EF0B  F03F         	goto	u631
  2010  007E12  EF0D  F03F         	goto	u630
  2011  007E16                     u631:
  2012  007E16  EF0F  F03F         	goto	l1801
  2013  007E1A                     u630:
  2014  007E1A  4A0E               	infsnz	Calibration@xFactor^0,f,c
  2015  007E1C  2A0F               	incf	(Calibration@xFactor+1)^0,f,c
  2016  007E1E                     l1801:
  2017                           
  2018                           ;main.c: 306:    DATAEE_WriteByte(cx_std_address, (uint8_t) xFactor);
  2019  007E1E  C00E  F001         	movff	Calibration@xFactor,DATAEE_WriteByte@bData
  2020  007E22  0E00               	movlw	0
  2021  007E24  ECC8  F03B         	call	_DATAEE_WriteByte
  2022  007E28                     
  2023                           ;main.c: 309:    if ( (yMax - yNeutral16) < (yNeutral16 - yMin) )
  2024  007E28  5016               	movf	Calibration@yMin^0,w,c
  2025  007E2A  5C1C               	subwf	Calibration@yNeutral16^0,w,c
  2026  007E2C  6E08               	movwf	??_Calibration^0,c
  2027  007E2E  5017               	movf	(Calibration@yMin+1)^0,w,c
  2028  007E30  581D               	subwfb	(Calibration@yNeutral16+1)^0,w,c
  2029  007E32  6E09               	movwf	(??_Calibration+1)^0,c
  2030  007E34  501C               	movf	Calibration@yNeutral16^0,w,c
  2031  007E36  5C18               	subwf	Calibration@yMax^0,w,c
  2032  007E38  6E0A               	movwf	(??_Calibration+2)^0,c
  2033  007E3A  501D               	movf	(Calibration@yNeutral16+1)^0,w,c
  2034  007E3C  5819               	subwfb	(Calibration@yMax+1)^0,w,c
  2035  007E3E  6E0B               	movwf	(??_Calibration+3)^0,c
  2036  007E40  5008               	movf	??_Calibration^0,w,c
  2037  007E42  5C0A               	subwf	(??_Calibration+2)^0,w,c
  2038  007E44  5009               	movf	(??_Calibration+1)^0,w,c
  2039  007E46  580B               	subwfb	(??_Calibration+3)^0,w,c
  2040  007E48  B0D8               	btfsc	status,0,c
  2041  007E4A  EF29  F03F         	goto	u641
  2042  007E4E  EF2B  F03F         	goto	u640
  2043  007E52                     u641:
  2044  007E52  EF33  F03F         	goto	l1807
  2045  007E56                     u640:
  2046  007E56                     
  2047                           ;main.c: 310:     temp = yMax - yNeutral16;
  2048  007E56  501C               	movf	Calibration@yNeutral16^0,w,c
  2049  007E58  5C18               	subwf	Calibration@yMax^0,w,c
  2050  007E5A  6E1E               	movwf	Calibration@temp^0,c
  2051  007E5C  501D               	movf	(Calibration@yNeutral16+1)^0,w,c
  2052  007E5E  5819               	subwfb	(Calibration@yMax+1)^0,w,c
  2053  007E60  6E1F               	movwf	(Calibration@temp+1)^0,c
  2054  007E62  EF39  F03F         	goto	l1809
  2055  007E66                     l1807:
  2056                           
  2057                           ;main.c: 312:     temp = yNeutral16 - yMin;
  2058  007E66  5016               	movf	Calibration@yMin^0,w,c
  2059  007E68  5C1C               	subwf	Calibration@yNeutral16^0,w,c
  2060  007E6A  6E1E               	movwf	Calibration@temp^0,c
  2061  007E6C  5017               	movf	(Calibration@yMin+1)^0,w,c
  2062  007E6E  581D               	subwfb	(Calibration@yNeutral16+1)^0,w,c
  2063  007E70  6E1F               	movwf	(Calibration@temp+1)^0,c
  2064  007E72                     l1809:
  2065                           
  2066                           ;main.c: 314:    yFactor = ((81*256)/temp);
  2067  007E72  0E51               	movlw	81
  2068  007E74  6E02               	movwf	(___lwdiv@dividend+1)^0,c
  2069  007E76  0E00               	movlw	0
  2070  007E78  6E01               	movwf	___lwdiv@dividend^0,c
  2071  007E7A  C01E  F003         	movff	Calibration@temp,___lwdiv@divisor
  2072  007E7E  C01F  F004         	movff	Calibration@temp+1,___lwdiv@divisor+1
  2073  007E82  EC7D  F03C         	call	___lwdiv	;wreg free
  2074  007E86  C001  F010         	movff	?___lwdiv,Calibration@yFactor
  2075  007E8A  C002  F011         	movff	?___lwdiv+1,Calibration@yFactor+1
  2076  007E8E                     
  2077                           ;main.c: 316:    if ( ((81*256)%temp) > 0 ) yFactor++;
  2078  007E8E  0E51               	movlw	81
  2079  007E90  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2080  007E92  0E00               	movlw	0
  2081  007E94  6E01               	movwf	___lwmod@dividend^0,c
  2082  007E96  C01E  F003         	movff	Calibration@temp,___lwmod@divisor
  2083  007E9A  C01F  F004         	movff	Calibration@temp+1,___lwmod@divisor+1
  2084  007E9E  EC19  F03C         	call	___lwmod	;wreg free
  2085  007EA2  5001               	movf	?___lwmod^0,w,c
  2086  007EA4  1002               	iorwf	(?___lwmod+1)^0,w,c
  2087  007EA6  B4D8               	btfsc	status,2,c
  2088  007EA8  EF58  F03F         	goto	u651
  2089  007EAC  EF5A  F03F         	goto	u650
  2090  007EB0                     u651:
  2091  007EB0  EF5C  F03F         	goto	l1815
  2092  007EB4                     u650:
  2093  007EB4  4A10               	infsnz	Calibration@yFactor^0,f,c
  2094  007EB6  2A11               	incf	(Calibration@yFactor+1)^0,f,c
  2095  007EB8                     l1815:
  2096                           
  2097                           ;main.c: 318:    DATAEE_WriteByte(cy_std_address, (uint8_t) yFactor);
  2098  007EB8  C010  F001         	movff	Calibration@yFactor,DATAEE_WriteByte@bData
  2099  007EBC  0E01               	movlw	1
  2100  007EBE  ECC8  F03B         	call	_DATAEE_WriteByte
  2101  007EC2                     
  2102                           ;main.c: 322:    if ( (xMax - xNeutral16) < (xNeutral16 - xMin) )
  2103  007EC2  5012               	movf	Calibration@xMin^0,w,c
  2104  007EC4  5C1A               	subwf	Calibration@xNeutral16^0,w,c
  2105  007EC6  6E08               	movwf	??_Calibration^0,c
  2106  007EC8  5013               	movf	(Calibration@xMin+1)^0,w,c
  2107  007ECA  581B               	subwfb	(Calibration@xNeutral16+1)^0,w,c
  2108  007ECC  6E09               	movwf	(??_Calibration+1)^0,c
  2109  007ECE  501A               	movf	Calibration@xNeutral16^0,w,c
  2110  007ED0  5C14               	subwf	Calibration@xMax^0,w,c
  2111  007ED2  6E0A               	movwf	(??_Calibration+2)^0,c
  2112  007ED4  501B               	movf	(Calibration@xNeutral16+1)^0,w,c
  2113  007ED6  5815               	subwfb	(Calibration@xMax+1)^0,w,c
  2114  007ED8  6E0B               	movwf	(??_Calibration+3)^0,c
  2115  007EDA  5008               	movf	??_Calibration^0,w,c
  2116  007EDC  5C0A               	subwf	(??_Calibration+2)^0,w,c
  2117  007EDE  5009               	movf	(??_Calibration+1)^0,w,c
  2118  007EE0  580B               	subwfb	(??_Calibration+3)^0,w,c
  2119  007EE2  B0D8               	btfsc	status,0,c
  2120  007EE4  EF76  F03F         	goto	u661
  2121  007EE8  EF78  F03F         	goto	u660
  2122  007EEC                     u661:
  2123  007EEC  EF80  F03F         	goto	l1821
  2124  007EF0                     u660:
  2125  007EF0                     
  2126                           ;main.c: 323:     temp = xMax - xNeutral16;
  2127  007EF0  501A               	movf	Calibration@xNeutral16^0,w,c
  2128  007EF2  5C14               	subwf	Calibration@xMax^0,w,c
  2129  007EF4  6E1E               	movwf	Calibration@temp^0,c
  2130  007EF6  501B               	movf	(Calibration@xNeutral16+1)^0,w,c
  2131  007EF8  5815               	subwfb	(Calibration@xMax+1)^0,w,c
  2132  007EFA  6E1F               	movwf	(Calibration@temp+1)^0,c
  2133  007EFC  EF86  F03F         	goto	l1823
  2134  007F00                     l1821:
  2135                           
  2136                           ;main.c: 325:     temp = xNeutral16 - xMin;
  2137  007F00  5012               	movf	Calibration@xMin^0,w,c
  2138  007F02  5C1A               	subwf	Calibration@xNeutral16^0,w,c
  2139  007F04  6E1E               	movwf	Calibration@temp^0,c
  2140  007F06  5013               	movf	(Calibration@xMin+1)^0,w,c
  2141  007F08  581B               	subwfb	(Calibration@xNeutral16+1)^0,w,c
  2142  007F0A  6E1F               	movwf	(Calibration@temp+1)^0,c
  2143  007F0C                     l1823:
  2144                           
  2145                           ;main.c: 327:    xFactor = ((91*256)/temp);
  2146  007F0C  0E5B               	movlw	91
  2147  007F0E  6E02               	movwf	(___lwdiv@dividend+1)^0,c
  2148  007F10  0E00               	movlw	0
  2149  007F12  6E01               	movwf	___lwdiv@dividend^0,c
  2150  007F14  C01E  F003         	movff	Calibration@temp,___lwdiv@divisor
  2151  007F18  C01F  F004         	movff	Calibration@temp+1,___lwdiv@divisor+1
  2152  007F1C  EC7D  F03C         	call	___lwdiv	;wreg free
  2153  007F20  C001  F00E         	movff	?___lwdiv,Calibration@xFactor
  2154  007F24  C002  F00F         	movff	?___lwdiv+1,Calibration@xFactor+1
  2155  007F28                     
  2156                           ;main.c: 329:    if ( ((91*256)%temp) > 0 ) xFactor++;
  2157  007F28  0E5B               	movlw	91
  2158  007F2A  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2159  007F2C  0E00               	movlw	0
  2160  007F2E  6E01               	movwf	___lwmod@dividend^0,c
  2161  007F30  C01E  F003         	movff	Calibration@temp,___lwmod@divisor
  2162  007F34  C01F  F004         	movff	Calibration@temp+1,___lwmod@divisor+1
  2163  007F38  EC19  F03C         	call	___lwmod	;wreg free
  2164  007F3C  5001               	movf	?___lwmod^0,w,c
  2165  007F3E  1002               	iorwf	(?___lwmod+1)^0,w,c
  2166  007F40  B4D8               	btfsc	status,2,c
  2167  007F42  EFA5  F03F         	goto	u671
  2168  007F46  EFA7  F03F         	goto	u670
  2169  007F4A                     u671:
  2170  007F4A  EFA9  F03F         	goto	l1829
  2171  007F4E                     u670:
  2172  007F4E  4A0E               	infsnz	Calibration@xFactor^0,f,c
  2173  007F50  2A0F               	incf	(Calibration@xFactor+1)^0,f,c
  2174  007F52                     l1829:
  2175                           
  2176                           ;main.c: 331:    DATAEE_WriteByte(cx_xtd_address, (uint8_t) xFactor);
  2177  007F52  C00E  F001         	movff	Calibration@xFactor,DATAEE_WriteByte@bData
  2178  007F56  0E02               	movlw	2
  2179  007F58  ECC8  F03B         	call	_DATAEE_WriteByte
  2180  007F5C                     
  2181                           ;main.c: 334:    if ( (yMax - yNeutral16) < (yNeutral16 - yMin) )
  2182  007F5C  5016               	movf	Calibration@yMin^0,w,c
  2183  007F5E  5C1C               	subwf	Calibration@yNeutral16^0,w,c
  2184  007F60  6E08               	movwf	??_Calibration^0,c
  2185  007F62  5017               	movf	(Calibration@yMin+1)^0,w,c
  2186  007F64  581D               	subwfb	(Calibration@yNeutral16+1)^0,w,c
  2187  007F66  6E09               	movwf	(??_Calibration+1)^0,c
  2188  007F68  501C               	movf	Calibration@yNeutral16^0,w,c
  2189  007F6A  5C18               	subwf	Calibration@yMax^0,w,c
  2190  007F6C  6E0A               	movwf	(??_Calibration+2)^0,c
  2191  007F6E  501D               	movf	(Calibration@yNeutral16+1)^0,w,c
  2192  007F70  5819               	subwfb	(Calibration@yMax+1)^0,w,c
  2193  007F72  6E0B               	movwf	(??_Calibration+3)^0,c
  2194  007F74  5008               	movf	??_Calibration^0,w,c
  2195  007F76  5C0A               	subwf	(??_Calibration+2)^0,w,c
  2196  007F78  5009               	movf	(??_Calibration+1)^0,w,c
  2197  007F7A  580B               	subwfb	(??_Calibration+3)^0,w,c
  2198  007F7C  B0D8               	btfsc	status,0,c
  2199  007F7E  EFC3  F03F         	goto	u681
  2200  007F82  EFC5  F03F         	goto	u680
  2201  007F86                     u681:
  2202  007F86  EFCD  F03F         	goto	l1835
  2203  007F8A                     u680:
  2204  007F8A                     
  2205                           ;main.c: 335:     temp = yMax - yNeutral16;
  2206  007F8A  501C               	movf	Calibration@yNeutral16^0,w,c
  2207  007F8C  5C18               	subwf	Calibration@yMax^0,w,c
  2208  007F8E  6E1E               	movwf	Calibration@temp^0,c
  2209  007F90  501D               	movf	(Calibration@yNeutral16+1)^0,w,c
  2210  007F92  5819               	subwfb	(Calibration@yMax+1)^0,w,c
  2211  007F94  6E1F               	movwf	(Calibration@temp+1)^0,c
  2212  007F96  EFD3  F03F         	goto	l1837
  2213  007F9A                     l1835:
  2214                           
  2215                           ;main.c: 337:     temp = yNeutral16 - yMin;
  2216  007F9A  5016               	movf	Calibration@yMin^0,w,c
  2217  007F9C  5C1C               	subwf	Calibration@yNeutral16^0,w,c
  2218  007F9E  6E1E               	movwf	Calibration@temp^0,c
  2219  007FA0  5017               	movf	(Calibration@yMin+1)^0,w,c
  2220  007FA2  581D               	subwfb	(Calibration@yNeutral16+1)^0,w,c
  2221  007FA4  6E1F               	movwf	(Calibration@temp+1)^0,c
  2222  007FA6                     l1837:
  2223                           
  2224                           ;main.c: 339:    yFactor = ((91*256)/temp);
  2225  007FA6  0E5B               	movlw	91
  2226  007FA8  6E02               	movwf	(___lwdiv@dividend+1)^0,c
  2227  007FAA  0E00               	movlw	0
  2228  007FAC  6E01               	movwf	___lwdiv@dividend^0,c
  2229  007FAE  C01E  F003         	movff	Calibration@temp,___lwdiv@divisor
  2230  007FB2  C01F  F004         	movff	Calibration@temp+1,___lwdiv@divisor+1
  2231  007FB6  EC7D  F03C         	call	___lwdiv	;wreg free
  2232  007FBA  C001  F010         	movff	?___lwdiv,Calibration@yFactor
  2233  007FBE  C002  F011         	movff	?___lwdiv+1,Calibration@yFactor+1
  2234  007FC2                     
  2235                           ;main.c: 341:    if ( ((91*256)%temp) > 0 ) yFactor++;
  2236  007FC2  0E5B               	movlw	91
  2237  007FC4  6E02               	movwf	(___lwmod@dividend+1)^0,c
  2238  007FC6  0E00               	movlw	0
  2239  007FC8  6E01               	movwf	___lwmod@dividend^0,c
  2240  007FCA  C01E  F003         	movff	Calibration@temp,___lwmod@divisor
  2241  007FCE  C01F  F004         	movff	Calibration@temp+1,___lwmod@divisor+1
  2242  007FD2  EC19  F03C         	call	___lwmod	;wreg free
  2243  007FD6  5001               	movf	?___lwmod^0,w,c
  2244  007FD8  1002               	iorwf	(?___lwmod+1)^0,w,c
  2245  007FDA  B4D8               	btfsc	status,2,c
  2246  007FDC  EFF2  F03F         	goto	u691
  2247  007FE0  EFF4  F03F         	goto	u690
  2248  007FE4                     u691:
  2249  007FE4  EFF6  F03F         	goto	l1843
  2250  007FE8                     u690:
  2251  007FE8  4A10               	infsnz	Calibration@yFactor^0,f,c
  2252  007FEA  2A11               	incf	(Calibration@yFactor+1)^0,f,c
  2253  007FEC                     l1843:
  2254                           
  2255                           ;main.c: 343:    DATAEE_WriteByte(cy_xtd_address, (uint8_t) yFactor);
  2256  007FEC  C010  F001         	movff	Calibration@yFactor,DATAEE_WriteByte@bData
  2257  007FF0  0E03               	movlw	3
  2258  007FF2  ECC8  F03B         	call	_DATAEE_WriteByte
  2259  007FF6  EF6E  F03E         	goto	l1765
  2260  007FFA  0012               	return		;funcret
  2261  007FFC                     __end_of_Calibration:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function ___lwmod *****************
  2265 ;; Defined at:
  2266 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  dividend        2    0[COMRAM] unsigned int 
  2269 ;;  divisor         2    2[COMRAM] unsigned int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  counter         1    4[COMRAM] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    0[COMRAM] unsigned int 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2281 ;;      Params:         4       0       0       0       0       0       0       0       0
  2282 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2284 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2285 ;;Total ram usage:        5 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_Calibration
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text12
  2295  007832                     __ptext12:
  2296                           	callstack 0
  2297  007832                     ___lwmod:
  2298                           	callstack 29
  2299  007832  5003               	movf	___lwmod@divisor^0,w,c
  2300  007834  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2301  007836  B4D8               	btfsc	status,2,c
  2302  007838  EF20  F03C         	goto	u531
  2303  00783C  EF22  F03C         	goto	u530
  2304  007840                     u531:
  2305  007840  EF46  F03C         	goto	l959
  2306  007844                     u530:
  2307  007844  0E01               	movlw	1
  2308  007846  6E05               	movwf	___lwmod@counter^0,c
  2309  007848  EF2A  F03C         	goto	l1735
  2310  00784C                     l1733:
  2311  00784C  90D8               	bcf	status,0,c
  2312  00784E  3603               	rlcf	___lwmod@divisor^0,f,c
  2313  007850  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2314  007852  2A05               	incf	___lwmod@counter^0,f,c
  2315  007854                     l1735:
  2316  007854  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2317  007856  EF2F  F03C         	goto	u541
  2318  00785A  EF31  F03C         	goto	u540
  2319  00785E                     u541:
  2320  00785E  EF26  F03C         	goto	l1733
  2321  007862                     u540:
  2322  007862                     l1737:
  2323  007862  5003               	movf	___lwmod@divisor^0,w,c
  2324  007864  5C01               	subwf	___lwmod@dividend^0,w,c
  2325  007866  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2326  007868  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2327  00786A  A0D8               	btfss	status,0,c
  2328  00786C  EF3A  F03C         	goto	u551
  2329  007870  EF3C  F03C         	goto	u550
  2330  007874                     u551:
  2331  007874  EF40  F03C         	goto	l1741
  2332  007878                     u550:
  2333  007878  5003               	movf	___lwmod@divisor^0,w,c
  2334  00787A  5E01               	subwf	___lwmod@dividend^0,f,c
  2335  00787C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2336  00787E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2337  007880                     l1741:
  2338  007880  90D8               	bcf	status,0,c
  2339  007882  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2340  007884  3203               	rrcf	___lwmod@divisor^0,f,c
  2341  007886  2E05               	decfsz	___lwmod@counter^0,f,c
  2342  007888  EF31  F03C         	goto	l1737
  2343  00788C                     l959:
  2344  00788C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2345  007890  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2346  007894  0012               	return		;funcret
  2347  007896                     __end_of___lwmod:
  2348                           	callstack 0
  2349                           
  2350 ;; *************** function ___lwdiv *****************
  2351 ;; Defined at:
  2352 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  dividend        2    0[COMRAM] unsigned int 
  2355 ;;  divisor         2    2[COMRAM] unsigned int 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  quotient        2    4[COMRAM] unsigned int 
  2358 ;;  counter         1    6[COMRAM] unsigned char 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  2    0[COMRAM] unsigned int 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2368 ;;      Params:         4       0       0       0       0       0       0       0       0
  2369 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2371 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2372 ;;Total ram usage:        7 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_Calibration
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text13
  2382  0078FA                     __ptext13:
  2383                           	callstack 0
  2384  0078FA                     ___lwdiv:
  2385                           	callstack 29
  2386  0078FA  0E00               	movlw	0
  2387  0078FC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2388  0078FE  0E00               	movlw	0
  2389  007900  6E05               	movwf	___lwdiv@quotient^0,c
  2390  007902  5003               	movf	___lwdiv@divisor^0,w,c
  2391  007904  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2392  007906  B4D8               	btfsc	status,2,c
  2393  007908  EF88  F03C         	goto	u501
  2394  00790C  EF8A  F03C         	goto	u500
  2395  007910                     u501:
  2396  007910  EFB2  F03C         	goto	l949
  2397  007914                     u500:
  2398  007914  0E01               	movlw	1
  2399  007916  6E07               	movwf	___lwdiv@counter^0,c
  2400  007918  EF92  F03C         	goto	l1715
  2401  00791C                     l1713:
  2402  00791C  90D8               	bcf	status,0,c
  2403  00791E  3603               	rlcf	___lwdiv@divisor^0,f,c
  2404  007920  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2405  007922  2A07               	incf	___lwdiv@counter^0,f,c
  2406  007924                     l1715:
  2407  007924  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2408  007926  EF97  F03C         	goto	u511
  2409  00792A  EF99  F03C         	goto	u510
  2410  00792E                     u511:
  2411  00792E  EF8E  F03C         	goto	l1713
  2412  007932                     u510:
  2413  007932                     l1717:
  2414  007932  90D8               	bcf	status,0,c
  2415  007934  3605               	rlcf	___lwdiv@quotient^0,f,c
  2416  007936  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2417  007938  5003               	movf	___lwdiv@divisor^0,w,c
  2418  00793A  5C01               	subwf	___lwdiv@dividend^0,w,c
  2419  00793C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2420  00793E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2421  007940  A0D8               	btfss	status,0,c
  2422  007942  EFA5  F03C         	goto	u521
  2423  007946  EFA7  F03C         	goto	u520
  2424  00794A                     u521:
  2425  00794A  EFAC  F03C         	goto	l1725
  2426  00794E                     u520:
  2427  00794E  5003               	movf	___lwdiv@divisor^0,w,c
  2428  007950  5E01               	subwf	___lwdiv@dividend^0,f,c
  2429  007952  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2430  007954  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2431  007956  8005               	bsf	___lwdiv@quotient^0,0,c
  2432  007958                     l1725:
  2433  007958  90D8               	bcf	status,0,c
  2434  00795A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2435  00795C  3203               	rrcf	___lwdiv@divisor^0,f,c
  2436  00795E  2E07               	decfsz	___lwdiv@counter^0,f,c
  2437  007960  EF99  F03C         	goto	l1717
  2438  007964                     l949:
  2439  007964  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2440  007968  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2441  00796C  0012               	return		;funcret
  2442  00796E                     __end_of___lwdiv:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _GetY *****************
  2446 ;; Defined at:
  2447 ;;		line 227 in file "main.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2    5[COMRAM] unsigned short 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2461 ;;      Params:         2       0       0       0       0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2464 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2465 ;;Total ram usage:        2 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 1
  2468 ;; This function calls:
  2469 ;;		_ADCC_GetSingleConversion
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;;		_Calibration
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text14
  2477  00761A                     __ptext14:
  2478                           	callstack 0
  2479  00761A                     _GetY:
  2480                           	callstack 29
  2481  00761A                     
  2482                           ;main.c: 229:     return ADCC_GetSingleConversion(AnalogY);
  2483  00761A  0E12               	movlw	18
  2484  00761C  EC95  F03B         	call	_ADCC_GetSingleConversion
  2485  007620  C001  F006         	movff	?_ADCC_GetSingleConversion,?_GetY
  2486  007624  C002  F007         	movff	?_ADCC_GetSingleConversion+1,?_GetY+1
  2487  007628  0012               	return		;funcret
  2488  00762A                     __end_of_GetY:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _GetX *****************
  2492 ;; Defined at:
  2493 ;;		line 222 in file "main.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2    5[COMRAM] unsigned short 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2507 ;;      Params:         2       0       0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2510 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 1
  2514 ;; This function calls:
  2515 ;;		_ADCC_GetSingleConversion
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;;		_Calibration
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text15
  2523  00760A                     __ptext15:
  2524                           	callstack 0
  2525  00760A                     _GetX:
  2526                           	callstack 29
  2527  00760A                     
  2528                           ;main.c: 224:     return ADCC_GetSingleConversion(AnalogX);
  2529  00760A  0E13               	movlw	19
  2530  00760C  EC95  F03B         	call	_ADCC_GetSingleConversion
  2531  007610  C001  F006         	movff	?_ADCC_GetSingleConversion,?_GetX
  2532  007614  C002  F007         	movff	?_ADCC_GetSingleConversion+1,?_GetX+1
  2533  007618  0012               	return		;funcret
  2534  00761A                     __end_of_GetX:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _ADCC_GetSingleConversion *****************
  2538 ;; Defined at:
  2539 ;;		line 137 in file "mcc_generated_files/adcc.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  channel         1    wreg     enum E15221
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  channel         1    4[COMRAM] enum E15221
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2    0[COMRAM] unsigned short 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         2       0       0       0       0       0       0       0       0
  2554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2555 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2556 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2557 ;;Total ram usage:        5 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_GetX
  2563 ;;		_GetY
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text16
  2568  00772A                     __ptext16:
  2569                           	callstack 0
  2570  00772A                     _ADCC_GetSingleConversion:
  2571                           	callstack 29
  2572                           
  2573                           ;incstack = 0
  2574                           ;ADCC_GetSingleConversion@channel stored from wreg
  2575  00772A  6E05               	movwf	ADCC_GetSingleConversion@channel^0,c
  2576  00772C                     
  2577                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  2578  00772C  0060  F017  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  2579  007732                     
  2580                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  2581  007732  013E               	movlb	62	; () banked
  2582  007734  8FF8               	bsf	248,7,b	;volatile
  2583  007736                     
  2584                           ; BSR set to: 62
  2585                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  2586  007736  9DF8               	bcf	248,6,b	;volatile
  2587  007738                     
  2588                           ; BSR set to: 62
  2589                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  2590  007738  81F8               	bsf	248,0,b	;volatile
  2591  00773A                     l91:
  2592                           
  2593                           ; BSR set to: 62
  2594                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  2595  00773A  B1F8               	btfsc	248,0,b	;volatile
  2596  00773C  EFA2  F03B         	goto	u471
  2597  007740  EFA4  F03B         	goto	u470
  2598  007744                     u471:
  2599  007744  EF9D  F03B         	goto	l91
  2600  007748                     u470:
  2601  007748                     
  2602                           ; BSR set to: 62
  2603                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2604  007748  51F0               	movf	240,w,b	;volatile
  2605  00774A  6E04               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  2606  00774C  6A03               	clrf	??_ADCC_GetSingleConversion^0,c
  2607  00774E  51EF               	movf	239,w,b	;volatile
  2608  007750  2403               	addwf	??_ADCC_GetSingleConversion^0,w,c
  2609  007752  6E01               	movwf	?_ADCC_GetSingleConversion^0,c
  2610  007754  0E00               	movlw	0
  2611  007756  2004               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  2612  007758  6E02               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  2613  00775A                     
  2614                           ; BSR set to: 62
  2615  00775A  0012               	return		;funcret
  2616  00775C                     __end_of_ADCC_GetSingleConversion:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _DATAEE_WriteByte *****************
  2620 ;; Defined at:
  2621 ;;		line 165 in file "mcc_generated_files/memory.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  bAdd            1    wreg     unsigned char 
  2624 ;;  bData           1    0[COMRAM] unsigned char 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  bAdd            1    1[COMRAM] unsigned char 
  2627 ;;  GIEBitValue     1    2[COMRAM] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2637 ;;      Params:         1       0       0       0       0       0       0       0       0
  2638 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2640 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2641 ;;Total ram usage:        3 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_Calibration
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text17
  2651  007790                     __ptext17:
  2652                           	callstack 0
  2653  007790                     _DATAEE_WriteByte:
  2654                           	callstack 29
  2655                           
  2656                           ; BSR set to: 62
  2657                           ;incstack = 0
  2658                           ;DATAEE_WriteByte@bAdd stored from wreg
  2659  007790  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
  2660  007792                     
  2661                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint8_t bAdd, uint8_t bData);m
      +                          cc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:     uint8_t GIEBi
      +                          tValue = INTCON0bits.GIE;
  2662  007792  0E00               	movlw	0
  2663  007794  BED2               	btfsc	210,7,c	;volatile
  2664  007796  0E01               	movlw	1
  2665  007798  6E03               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  2666  00779A                     
  2667                           ;mcc_generated_files/memory.c: 169:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  2668  00779A  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
  2669  0077A0                     
  2670                           ;mcc_generated_files/memory.c: 170:     NVMDAT = bData;
  2671  0077A0  0060  F007  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
  2672  0077A6                     
  2673                           ;mcc_generated_files/memory.c: 171:     NVMCON1bits.NVMREG = 0;
  2674  0077A6  0E3F               	movlw	-193
  2675  0077A8  0139               	movlb	57	; () banked
  2676  0077AA  17E5               	andwf	229,f,b	;volsfr
  2677  0077AC                     
  2678                           ; BSR set to: 57
  2679                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 1;
  2680  0077AC  85E5               	bsf	229,2,b	;volsfr
  2681  0077AE                     
  2682                           ; BSR set to: 57
  2683                           ;mcc_generated_files/memory.c: 173:     INTCON0bits.GIE = 0;
  2684  0077AE  9ED2               	bcf	210,7,c	;volatile
  2685  0077B0                     
  2686                           ; BSR set to: 57
  2687                           ;mcc_generated_files/memory.c: 174:     NVMCON2 = 0x55;
  2688  0077B0  0E55               	movlw	85
  2689  0077B2  6FE6               	movwf	230,b	;volsfr
  2690  0077B4                     
  2691                           ; BSR set to: 57
  2692                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0xAA;
  2693  0077B4  0EAA               	movlw	170
  2694  0077B6  6FE6               	movwf	230,b	;volsfr
  2695  0077B8                     
  2696                           ; BSR set to: 57
  2697                           ;mcc_generated_files/memory.c: 176:     NVMCON1bits.WR = 1;
  2698  0077B8  83E5               	bsf	229,1,b	;volsfr
  2699  0077BA                     l314:
  2700                           
  2701                           ; BSR set to: 57
  2702                           ;mcc_generated_files/memory.c: 178:     while (NVMCON1bits.WR)
  2703  0077BA  B3E5               	btfsc	229,1,b	;volsfr
  2704  0077BC  EFE2  F03B         	goto	u481
  2705  0077C0  EFE4  F03B         	goto	u480
  2706  0077C4                     u481:
  2707  0077C4  EFDD  F03B         	goto	l314
  2708  0077C8                     u480:
  2709  0077C8                     
  2710                           ; BSR set to: 57
  2711                           ;mcc_generated_files/memory.c: 182:     NVMCON1bits.WREN = 0;
  2712  0077C8  95E5               	bcf	229,2,b	;volsfr
  2713                           
  2714                           ;mcc_generated_files/memory.c: 183:     INTCON0bits.GIE = GIEBitValue;
  2715  0077CA  B003               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  2716  0077CC  D002               	bra	u495
  2717  0077CE  9ED2               	bcf	210,7,c	;volatile
  2718  0077D0  D001               	bra	u496
  2719  0077D2                     u495:
  2720  0077D2  8ED2               	bsf	210,7,c	;volatile
  2721  0077D4                     u496:
  2722  0077D4  0012               	return		;funcret
  2723  0077D6                     __end_of_DATAEE_WriteByte:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _ADCC_DisableContinuousConversion *****************
  2727 ;; Defined at:
  2728 ;;		line 275 in file "mcc_generated_files/adcc.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		None
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text18
  2756  0075FE                     __ptext18:
  2757                           	callstack 0
  2758  0075FE                     _ADCC_DisableContinuousConversion:
  2759                           	callstack 30
  2760  0075FE                     
  2761                           ;mcc_generated_files/adcc.c: 278:     ADCON0bits.ADCONT = 0;
  2762  0075FE  013E               	movlb	62	; () banked
  2763  007600  9DF8               	bcf	248,6,b	;volatile
  2764  007602                     
  2765                           ; BSR set to: 62
  2766  007602  0012               	return		;funcret
  2767  007604                     __end_of_ADCC_DisableContinuousConversion:
  2768                           	callstack 0
  2769  0000                     
  2770                           	psect	rparam
  2771  0000                     
  2772                           	psect	idloc
  2773                           
  2774                           ;Config register IDLOC0 @ 0x200000
  2775                           ;	unspecified, using default values
  2776  200000                     	org	2097152
  2777  200000  0FFF               	dw	4095
  2778                           
  2779                           ;Config register IDLOC1 @ 0x200002
  2780                           ;	unspecified, using default values
  2781  200002                     	org	2097154
  2782  200002  0FFF               	dw	4095
  2783                           
  2784                           ;Config register IDLOC2 @ 0x200004
  2785                           ;	unspecified, using default values
  2786  200004                     	org	2097156
  2787  200004  0FFF               	dw	4095
  2788                           
  2789                           ;Config register IDLOC3 @ 0x200006
  2790                           ;	unspecified, using default values
  2791  200006                     	org	2097158
  2792  200006  0FFF               	dw	4095
  2793                           
  2794                           ;Config register IDLOC4 @ 0x200008
  2795                           ;	unspecified, using default values
  2796  200008                     	org	2097160
  2797  200008  0FFF               	dw	4095
  2798                           
  2799                           ;Config register IDLOC5 @ 0x20000A
  2800                           ;	unspecified, using default values
  2801  20000A                     	org	2097162
  2802  20000A  0FFF               	dw	4095
  2803                           
  2804                           ;Config register IDLOC6 @ 0x20000C
  2805                           ;	unspecified, using default values
  2806  20000C                     	org	2097164
  2807  20000C  0FFF               	dw	4095
  2808                           
  2809                           ;Config register IDLOC7 @ 0x20000E
  2810                           ;	unspecified, using default values
  2811  20000E                     	org	2097166
  2812  20000E  0FFF               	dw	4095
  2813                           
  2814                           	psect	config
  2815                           
  2816                           ;Config register CONFIG1L @ 0x300000
  2817                           ;	External Oscillator Selection
  2818                           ;	FEXTOSC = OFF, Oscillator not enabled
  2819                           ;	Reset Oscillator Selection
  2820                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  2821  300000                     	org	3145728
  2822  300000  8C                 	db	140
  2823                           
  2824                           ;Config register CONFIG1H @ 0x300001
  2825                           ;	Clock out Enable bit
  2826                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2827                           ;	PRLOCKED One-Way Set Enable bit
  2828                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2829                           ;	Clock Switch Enable bit
  2830                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2831                           ;	Fail-Safe Clock Monitor Enable bit
  2832                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2833  300001                     	org	3145729
  2834  300001  FF                 	db	255
  2835                           
  2836                           ;Config register CONFIG2L @ 0x300002
  2837                           ;	MCLR Enable bit
  2838                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2839                           ;	Power-up timer selection bits
  2840                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2841                           ;	Multi-vector enable bit
  2842                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2843                           ;	IVTLOCK bit One-way set enable bit
  2844                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2845                           ;	Low Power BOR Enable bit
  2846                           ;	LPBOREN = OFF, ULPBOR disabled
  2847                           ;	Brown-out Reset Enable bits
  2848                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2849  300002                     	org	3145730
  2850  300002  F7                 	db	247
  2851                           
  2852                           ;Config register CONFIG2H @ 0x300003
  2853                           ;	Brown-out Reset Voltage Selection bits
  2854                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2855                           ;	ZCD Disable bit
  2856                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2857                           ;	PPSLOCK bit One-Way Set Enable bit
  2858                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2859                           ;	Stack Full/Underflow Reset Enable bit
  2860                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2861                           ;	Debugger Enable bit
  2862                           ;	DEBUG = OFF, Background debugger disabled
  2863                           ;	Extended Instruction Set Enable bit
  2864                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2865  300003                     	org	3145731
  2866  300003  FF                 	db	255
  2867                           
  2868                           ;Config register CONFIG3L @ 0x300004
  2869                           ;	WDT Period selection bits
  2870                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2871                           ;	WDT operating mode
  2872                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2873  300004                     	org	3145732
  2874  300004  9F                 	db	159
  2875                           
  2876                           ;Config register CONFIG3H @ 0x300005
  2877                           ;	WDT Window Select bits
  2878                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2879                           ;	WDT input clock selector
  2880                           ;	WDTCCS = SC, Software Control
  2881  300005                     	org	3145733
  2882  300005  FF                 	db	255
  2883                           
  2884                           ;Config register CONFIG4L @ 0x300006
  2885                           ;	Boot Block Size selection bits
  2886                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2887                           ;	Boot Block enable bit
  2888                           ;	BBEN = OFF, Boot block disabled
  2889                           ;	Storage Area Flash enable bit
  2890                           ;	SAFEN = OFF, SAF disabled
  2891                           ;	Application Block write protection bit
  2892                           ;	WRTAPP = OFF, Application Block not write protected
  2893  300006                     	org	3145734
  2894  300006  FF                 	db	255
  2895                           
  2896                           ;Config register CONFIG4H @ 0x300007
  2897                           ;	Boot Block Write Protection bit
  2898                           ;	WRTB = OFF, Boot Block not write-protected
  2899                           ;	Configuration Register Write Protection bit
  2900                           ;	WRTC = OFF, Configuration registers not write-protected
  2901                           ;	Data EEPROM Write Protection bit
  2902                           ;	WRTD = OFF, Data EEPROM not write-protected
  2903                           ;	SAF Write protection bit
  2904                           ;	WRTSAF = OFF, SAF not Write Protected
  2905                           ;	Low Voltage Programming Enable bit
  2906                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2907  300007                     	org	3145735
  2908  300007  FF                 	db	255
  2909                           
  2910                           ;Config register CONFIG5L @ 0x300008
  2911                           ;	PFM and Data EEPROM Code Protection bit
  2912                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2913  300008                     	org	3145736
  2914  300008  FF                 	db	255
  2915                           
  2916                           ;Config register CONFIG5H @ 0x300009
  2917                           ;	unspecified, using default values
  2918  300009                     	org	3145737
  2919  300009  FF                 	db	255
  2920                           tosu	equ	0x3FFF
  2921                           tosh	equ	0x3FFE
  2922                           tosl	equ	0x3FFD
  2923                           stkptr	equ	0x3FFC
  2924                           pclatu	equ	0x3FFB
  2925                           pclath	equ	0x3FFA
  2926                           pcl	equ	0x3FF9
  2927                           tblptru	equ	0x3FF8
  2928                           tblptrh	equ	0x3FF7
  2929                           tblptrl	equ	0x3FF6
  2930                           tablat	equ	0x3FF5
  2931                           prodh	equ	0x3FF4
  2932                           prodl	equ	0x3FF3
  2933                           indf0	equ	0x3FEF
  2934                           postinc0	equ	0x3FEE
  2935                           postdec0	equ	0x3FED
  2936                           preinc0	equ	0x3FEC
  2937                           plusw0	equ	0x3FEB
  2938                           fsr0h	equ	0x3FEA
  2939                           fsr0l	equ	0x3FE9
  2940                           wreg	equ	0x3FE8
  2941                           indf1	equ	0x3FE7
  2942                           postinc1	equ	0x3FE6
  2943                           postdec1	equ	0x3FE5
  2944                           preinc1	equ	0x3FE4
  2945                           plusw1	equ	0x3FE3
  2946                           fsr1h	equ	0x3FE2
  2947                           fsr1l	equ	0x3FE1
  2948                           bsr	equ	0x3FE0
  2949                           indf2	equ	0x3FDF
  2950                           postinc2	equ	0x3FDE
  2951                           postdec2	equ	0x3FDD
  2952                           preinc2	equ	0x3FDC
  2953                           plusw2	equ	0x3FDB
  2954                           fsr2h	equ	0x3FDA
  2955                           fsr2l	equ	0x3FD9
  2956                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      70
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Calibration
    _ScaleDown->___wmul
    _Calibration->_GetX
    _Calibration->_GetY
    _Calibration->___lwdiv
    _GetY->_ADCC_GetSingleConversion
    _GetX->_ADCC_GetSingleConversion

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    5610
                                             31 COMRAM    27    27      0
   _ADCC_DisableContinuousConversion
                        _Calibration
                    _DATAEE_ReadByte
                               _GetX
                               _GetY
                         _RotateLeft
                        _RotateRight
                  _SYSTEM_Initialize
                          _ScaleDown
 ---------------------------------------------------------------------------------
 (1) _ScaleDown                                            4     1      3     811
                                              6 COMRAM     4     1      3
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RotateRight                                          2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RotateLeft                                           2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Calibration                                         24    24      0    3401
                                              7 COMRAM    24    24      0
                   _DATAEE_WriteByte
                               _GetX
                               _GetY
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _GetY                                                 2     0      2      22
                                              5 COMRAM     2     0      2
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (1) _GetX                                                 2     0      2      22
                                              5 COMRAM     2     0      2
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     3     2      1     447
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DisableContinuousConversion
   _Calibration
     _DATAEE_WriteByte
     _GetX
       _ADCC_GetSingleConversion
     _GetY
       _ADCC_GetSingleConversion
     ___lwdiv
     ___lwmod
   _DATAEE_ReadByte
   _GetX
   _GetY
   _RotateLeft
   _RotateRight
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ScaleDown
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      42        0.0%
BITBIGSFRlhhh      459      0       0      26        0.0%
BITBIGSFRllllll    1A0      0       0      40        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhhhh     BA      0       0      24        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      46       1       73.7%
BITBIGSFRllllhh     59      0       0      33        0.0%
BITBIGSFRhhhhhh     22      0       0      21        0.0%
BITBIGSFRllllll     1F      0       0      39        0.0%
BITBIGSFRlhlh       15      0       0      28        0.0%
BITBIGSFRlllllh     11      0       0      38        0.0%
BITBIGSFRhhhhhh      D      0       0      22        0.0%
BITBIGSFRlllh        B      0       0      32        0.0%
BITBIGSFRhhhhhh      7      0       0      20        0.0%
BITBIGSFRllhl        5      0       0      31        0.0%
BITBIGSFRlhll        5      0       0      29        0.0%
BITBIGSFRhhhhhh      5      0       0      23        0.0%
BITBIGSFRllhh        4      0       0      30        0.0%
BITBIGSFRllllhh      2      0       0      35        0.0%
BITBIGSFRlhhl        2      0       0      27        0.0%
BITBIGSFRllllhh      1      0       0      34        0.0%
BITBIGSFRllllhh      1      0       0      36        0.0%
BITBIGSFRllllhl      1      0       0      37        0.0%
BITBIGSFRhhhhhl      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46      41        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Oct 16 17:24:22 2022

                                      l91 773A                                        l94 775A  
                                      l79 7830                       ___wmul@multiplicand 0003  
                                     l151 7602                                       l320 766C  
                                     l400 7A8C                                       l217 78F8  
                                     l314 77BA                                       l402 7B4A  
                                     l403 7B96                                       l316 77C8  
                                     l260 7652                                       l317 77D4  
                                     l263 76D8                                       l416 7618  
                                     l424 7690                                       l257 763A  
                                     l419 7628                                       l429 76B4  
                                     l455 76FE                                       l458 7728  
                                     l399 7A32                                       l956 796C  
                                     l949 7964                                       l966 7894  
                                     l959 788C                                       u240 767E  
                                     u241 767A                                       u250 76A2  
                                     u251 769E                                       u500 7914  
                                     u501 7910                                       u510 7932  
                                     u511 792E                                       u520 794E  
                                     u600 7D64                                       u521 794A  
                                     u601 7D60                                       u530 7844  
                                     u610 7D86                                       u531 7840  
                                     u611 7D82                                       u540 7862  
                                     u620 7DBC                                       u700 7A2E  
                                     u541 785E                                       u621 7DB8  
                                     u701 7A2A                                       u470 7748  
                                     u550 7878                                       u630 7E1A  
                                     u710 7A5A                                       u471 7744  
                                     u551 7874                                       u631 7E16  
                                     u711 7A56                                       u480 77C8  
                                     u640 7E56                                       u800 7BF6  
                                     u720 7A82                                       u481 77C4  
                                     u641 7E52                                       u801 7BF2  
                                     u721 7A7E                                       u650 7EB4  
                                     u570 7CFE                                       u810 7C1E  
                                     u730 7AA2                                       u651 7EB0  
                                     u571 7CFA                                       u811 7C1A  
                                     u731 7A9E                                       u660 7EF0  
                                     u580 7D1C                                       u820 7C3A  
                                     u740 7ACC                                       u661 7EEC  
                                     u581 7D18                                       u565 76F0  
                                     u821 7C36                                       u741 7AC8  
                                     u670 7F4E                                       u590 7D46  
                                     u830 7C78                                       u750 7B18  
                                     u495 77D2                                       u671 7F4A  
                                     u591 7D42                                       u831 7C74  
                                     u751 7B14                                       u496 77D4  
                                     u680 7F8A                                       u840 7C8A  
                                     u760 7B40                                       u681 7F86  
                                     u841 7C86                                       u761 7B3C  
                                     u690 7FE8                                       u770 7B60  
                                     u691 7FE4                                       u771 7B5C  
                                     u780 7B8A                                       u781 7B86  
                                     u790 7BD0                                       u791 7BCC  
                                     u857 798E                                       u867 79A8  
                                     wreg 003FE8                               main@xFactor 002C  
                             main@yFactor 002D                                      l1143 77D6  
                                    l1151 78EC                                      l1233 75FE  
                                    l1161 763C                                      l1153 78EE  
                                    l1145 7896                                      l1251 7662  
                                    l1155 78F0                                      l1147 78E8  
                                    l1235 762A                                      l1253 7664  
                                    l1157 78F2                                      l1149 78EA  
                                    l1255 7666                                      l1247 7656  
                                    l1159 76B6                                      l1257 7668  
                                    l1249 765C                                      l1361 7670  
                                    l1363 767E                                      l1371 7694  
                                    l1365 7688                                      l1373 76A2  
                                    l1701 7700                                      l1711 7914  
                                    l1367 768E                                      l1375 76AC  
                                    l1703 7720                                      l1721 794E  
                                    l1713 791C                                      l1801 7E1E  
                                    l1377 76B2                                      l1723 7956  
                                    l1715 7924                                      l1707 78FA  
                                    l1731 7844                                      l1811 7E8E  
                                    l1803 7E28                                      l1725 7958  
                                    l1717 7932                                      l1709 7902  
                                    l1741 7880                                      l1733 784C  
                                    l1821 7F00                                      l1813 7EB4  
                                    l1805 7E56                                      l1901 7AFC  
                                    l1671 7748                                      l1663 772C  
                                    l1727 795E                                      l1719 7938  
                                    l1743 7886                                      l1735 7854  
                                    l1831 7F5C                                      l1823 7F0C  
                                    l1815 7EB8                                      l1807 7E66  
                                    l1751 7C9A                                      l1911 7BAE  
                                    l1903 7B18                                      l1681 77A6  
                                    l1665 7732                                      l1737 7862  
                                    l1729 7832                                      l1841 7FE8  
                                    l1833 7F8A                                      l1825 7F28  
                                    l1817 7EC2                                      l1809 7E72  
                                    l1761 7CCC                                      l1753 7CA4  
                                    l1745 76DA                                      l1921 7BDC  
                                    l1913 7BB6                                      l1905 7B40  
                                    l1691 77B8                                      l1683 77AC  
                                    l1675 7792                                      l1667 7736  
                                    l1739 7878                                      l1843 7FEC  
                                    l1835 7F9A                                      l1827 7F4E  
                                    l1819 7EF0                                      l1771 7D1C  
                                    l1763 7CD4                                      l1755 7CB0  
                                    l1931 7C26                                      l1923 7BF6  
                                    l1915 7BC2                                      l1907 7B60  
                                    l1851 797A                                      l1685 77AE  
                                    l1677 779A                                      l1669 7738  
                                    l1693 760A                                      l1837 7FA6  
                                    l1829 7F52                                      l1781 7D64  
                                    l1773 7D24                                      l1765 7CDC  
                                    l1757 7CBC                                      l1749 7C92  
                                    l1941 7C56                                      l1933 7C2C  
                                    l1925 7BFE                                      l1917 7BD0  
                                    l1909 7B8A                                      l1861 7984  
                                    l1853 797C                                      l1845 796E  
                                    l1687 77B0                                      l1679 77A0  
                                    l1839 7FC2                                      l1791 7DBC  
                                    l1783 7D6C                                      l1775 7D30  
                                    l1767 7CFE                                      l1759 7CC4  
                                    l1935 7C3A                                      l1927 7C04  
                                    l1919 7BD8                                      l1943 7C66  
                                    l1871 79D0                                      l1863 799C  
                                    l1855 797E                                      l1847 7972  
                                    l1689 77B4                                      l1697 761A  
                                    l1793 7DCC                                      l1785 7D70  
                                    l1777 7D46                                      l1769 7D06  
                                    l1945 7C78                                      l1937 7C42  
                                    l1929 7C1E                                      l1881 7A12  
                                    l1873 79DC                                      l1865 799E  
                                    l1857 7980                                      l1849 7976  
                                    l1795 7DD8                                      l1787 7D86  
                                    l1779 7D4E                                      l1939 7C46  
                                    l1891 7A82                                      l1883 7A18  
                                    l1875 79EE                                      l1867 79C4  
                                    l1859 7982                                      l1797 7DF4  
                                    l1789 7D8E                                      l1893 7AA2  
                                    l1885 7A2E                                      l1877 79F4  
                                    l1869 79CC                                      l1799 7E1A  
                                    l1895 7ACC                                      l1887 7A3E  
                                    l1879 7A00                                      l1897 7AD8  
                                    l1889 7A5A                                      l1899 7AE4  
                                    _LATA 003FBA                                      _LATB 003FBB  
                                    _LATC 003FBC                                      _PMD0 0039C0  
                                    _PMD1 0039C1                                      _PMD2 0039C2  
                                    _PMD3 0039C3                                      _PMD4 0039C4  
                                    _PMD5 0039C5                                      _PMD6 0039C6  
                                    _PMD7 0039C7                                      _WPUA 003A41  
                                    _WPUB 003A51                                      _WPUC 003A61  
                                    _WPUE 003A81                                      _GetX 760A  
                                    _GetY 761A                                      _main 796E  
                                    fsr1l 003FE1                                      prodh 003FF4  
                                    prodl 003FF3                                      start 7FFC  
                            ___param_bank 000000                               _Calibration 7C92  
                                   ?_GetX 0006                                     ?_GetY 0006  
                              ScaleDown@c 0009             __end_of_OSCILLATOR_Initialize 7654  
                                   _ADACT 003EFE                                     _ADCAP 003EF5  
                                   ?_main 0001                                     _ADCLK 003EFF  
                                   _ADCNT 003EEB                                     _ADPCH 003EF1  
                                   _ADREF 003EFD                                     _ADRPT 003EEC  
                            main@maxRange 003A                           __end_of___lwdiv 796E  
                         __end_of___lwmod 7896                                     _OSCEN 0039DD  
                                   _TRISA 003FC2                                     _TRISB 003FC3  
                                   _TRISC 003FC4                           _DATAEE_ReadByte 7654  
                                   main@x 0034                                     main@y 0038  
                                   tablat 003FF5                                     status 003FD8  
                            __end_of_GetX 761A                              __end_of_GetY 762A  
                         __initialization 775C                              __end_of_main 7C92  
                                  ??_GetX 0008                                    ??_GetY 0008  
                                  ??_main 0020                             __activetblptr 000000  
                                  _ADACCH 003EE9                                    _ADACCL 003EE8  
                                  _ADACCU 003EEA                                    _ADACQH 003EF4  
                                  _ADACQL 003EF3                                    _ADCON0 003EF8  
                                  _ADCON1 003EF9                                    _ADCON2 003EFA  
                                  _ADCON3 003EFB                                    _ADERRH 003EE3  
                                  _ADERRL 003EE2                                    _ADLTHH 003EDF  
                                  _ADLTHL 003EDE                                    _ADRESH 003EF0  
                                  _ADRESL 003EEF                                    _ADPREH 003EF7  
                                  _ADPREL 003EF6                                    _ADSTAT 003EFC  
                                  _ADUTHH 003EE1                                    _ADUTHL 003EE0  
                                  _ANSELA 003A40                                    _ANSELB 003A50  
                                  _ANSELC 003A60                                    _RB1I2C 003A5A  
                                  _RB2I2C 003A5B                                    _RC3I2C 003A6A  
                                  _RC4I2C 003A6B                                    _ODCONA 003A42  
                                  _ODCONB 003A52                                    _ODCONC 003A62  
                                  _INLVLA 003A44                                    _INLVLB 003A54  
                                  _INLVLC 003A64                                    _INLVLE 003A84  
                                  _TABLAT 003FF5                                    _OSCFRQ 0039DF  
                                  _NVMDAT 0039E3                             main@xNeutral8 0036  
                           main@yNeutral8 0037                                    ___wmul 7700  
                               ??___lwdiv 0005                                 ??___lwmod 0005  
                                  _cx_std 0040                                    _cy_std 003F  
                                  _cx_xtd 003D                                    _cy_xtd 003C  
                                  isa$std 000001                   __end_of_DATAEE_ReadByte 766E  
                         _ADCC_Initialize 77D6                            _PMD_Initialize 76B6  
                            __pdataCOMRAM 0041                                _RotateLeft 766E  
                                  tblptrh 003FF7                                    tblptrl 003FF6  
                                  tblptru 003FF8                 ?_ADCC_GetSingleConversion 0001  
                          _cx_std_address 003E                         _SYSTEM_Initialize 762A  
                              __accesstop 0060                   __end_of__initialization 778A  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                           ??_RotateRight 0001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0001                          _DATAEE_WriteByte 7790  
                  __end_of_PMD_Initialize 76DA                         __end_of_ScaleDown 7700  
                         Calibration@xMax 0014                           Calibration@xMin 0012  
                         Calibration@yMax 0018                           Calibration@yMin 0016  
                         Calibration@temp 001E                     Calibration@xNeutral16 001A  
               __end_of_SYSTEM_Initialize 763C                            _cy_std_address 0046  
                   Calibration@yNeutral16 001C                            ScaleDown@raw12 0007  
                          _cx_xtd_address 0045                              ?_Calibration 0001  
                                 ?___wmul 0001                   __end_of_ADCC_Initialize 7832  
                                 _ADFLTRH 003EE7                                   _ADFLTRL 003EE6  
                     __end_of_RotateRight 76B6                                   _ADPREVH 003EEE  
                                 _ADPREVL 003EED                                   _ADSTPTH 003EE5  
                                 _ADSTPTL 003EE4                           ?_PMD_Initialize 0001  
                        ?_DATAEE_ReadByte 0001                               ?_RotateLeft 0001  
                                 _OSCCON1 0039D9                                   _OSCCON3 0039DB  
                                 _TBLPTRH 003FF7                                   _TBLPTRL 003FF6  
                                 _TBLPTRU 003FF8                                   _NVMADRL 0039E0  
                                 _OSCTUNE 0039DE                                   _NVMCON2 0039E6  
                                 _SLRCONA 003A43                                   _SLRCONB 003A53  
                                 _SLRCONC 003A63                            main@xNeutral16 002A  
                          main@yNeutral16 0024                      DATAEE_WriteByte@bAdd 0002  
                          _cy_xtd_address 0044                                   __Hparam 0000  
                                 __Lparam 0000                        Calibration@xFactor 000E  
                      Calibration@yFactor 0010                                   ___lwdiv 78FA  
                                 ___lwmod 7832                        Calibration@counter 000C  
                                 __pcinit 775C                                   __ramtop 0800  
                                 __ptext0 796E                                   __ptext1 76DA  
                                 __ptext2 7700                                   __ptext3 762A  
                                 __ptext4 76B6                                   __ptext5 7896  
                                 __ptext6 763C                                   __ptext7 77D6  
                                 __ptext8 7692                                   __ptext9 766E  
                   _OSCILLATOR_Initialize 763C                  ??_PIN_MANAGER_Initialize 0001  
                    end_of_initialization 778A                               _RotateRight 7692  
                     _calibSwitch_address 0041                                   postdec1 003FE5  
                                 postinc0 003FEE                          ?_ADCC_Initialize 0001  
        __end_of_ADCC_GetSingleConversion 775C                  __end_of_DATAEE_WriteByte 77D6  
                              main@xWheel 0032                                main@yWheel 0033  
                              main@xSteps 002E                                main@ySteps 0030  
                          __end_of___wmul 772A                             __pidataCOMRAM 7604  
                  ?_OSCILLATOR_Initialize 0001                              _firstPowerOn 0043  
                     start_initialization 775C                                 _ScaleDown 76DA  
                     DATAEE_ReadByte@bAdd 0001                               _calibSwitch 003B  
                        ??_PMD_Initialize 0001                                  ??___wmul 0005  
                _ADCC_GetSingleConversion 772A                               __pbssCOMRAM 003B  
                            ??_RotateLeft 0001                                ?_ScaleDown 0007  
__end_of_ADCC_DisableContinuousConversion 7604        ??_ADCC_DisableContinuousConversion 0001  
       ?_ADCC_DisableContinuousConversion 0001          _ADCC_DisableContinuousConversion 75FE  
                        ___lwdiv@dividend 0001                    _PIN_MANAGER_Initialize 7896  
         ADCC_GetSingleConversion@channel 0005                        __end_of_RotateLeft 7692  
                                ?___lwdiv 0001                                  ?___lwmod 0001  
                        ___lwdiv@quotient 0005                            ___wmul@product 0005  
                                _LATAbits 003FBA                                  _LATBbits 003FBB  
                                _LATCbits 003FBC                              ?_RotateRight 0001  
                                _PIR0bits 0039A0                                _ADCON0bits 003EF8  
                              _ADCON1bits 003EF9                                _ADCON2bits 003EFA  
                              _ADCON3bits 003EFB                         ___wmul@multiplier 0001  
                   DATAEE_WriteByte@bData 0001                               _INTCON0bits 003FD2  
                             ??_ScaleDown 000A                                 copy_data0 7770  
                       ?_DATAEE_WriteByte 0001                        ??_DATAEE_WriteByte 0002  
                        RotateLeft@result 0001                                _ADSTATbits 003EFC  
                                __Hrparam 0000                                  __Lrparam 0000  
                 ??_OSCILLATOR_Initialize 0001                           ___lwdiv@divisor 0003  
                    _firstPowerOn_address 0042                           ___lwdiv@counter 0007  
                                __ptext10 7654                                  __ptext11 7C92  
                                __ptext12 7832                                  __ptext13 78FA  
                                __ptext14 761A                                  __ptext15 760A  
                                __ptext16 772A                                  __ptext17 7790  
                                __ptext18 75FE               DATAEE_WriteByte@GIEBitValue 0003  
                       ??_DATAEE_ReadByte 0001                             ??_Calibration 0008  
                                isa$xinst 000000                ??_ADCC_GetSingleConversion 0003  
                       RotateRight@result 0001                                  main@xOld 0026  
                                main@yOld 0028                           RotateLeft@cData 0002  
                             _NVMCON1bits 0039E5                          ___lwmod@dividend 0001  
                 ?_PIN_MANAGER_Initialize 0001                          RotateRight@cData 0002  
                     __end_of_Calibration 7FFC                           ___lwmod@divisor 0003  
                         ___lwmod@counter 0005            __end_of_PIN_MANAGER_Initialize 78FA  
                       ??_ADCC_Initialize 0001  
